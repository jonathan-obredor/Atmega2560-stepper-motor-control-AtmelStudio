
ejemplo_leds.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800200  00000708  0000077c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000708  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000784  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000007b4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  000007f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000001a9  00000000  00000000  00000834  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000110  00000000  00000000  000009dd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001ec  00000000  00000000  00000aed  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000f4  00000000  00000000  00000cdc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000200  00000000  00000000  00000dd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000196  00000000  00000000  00000fd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00001166  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	86 c0       	rjmp	.+268    	; 0x112 <__bad_interrupt>
   6:	00 00       	nop
   8:	84 c0       	rjmp	.+264    	; 0x112 <__bad_interrupt>
   a:	00 00       	nop
   c:	82 c0       	rjmp	.+260    	; 0x112 <__bad_interrupt>
   e:	00 00       	nop
  10:	80 c0       	rjmp	.+256    	; 0x112 <__bad_interrupt>
  12:	00 00       	nop
  14:	7e c0       	rjmp	.+252    	; 0x112 <__bad_interrupt>
  16:	00 00       	nop
  18:	7c c0       	rjmp	.+248    	; 0x112 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	7a c0       	rjmp	.+244    	; 0x112 <__bad_interrupt>
  1e:	00 00       	nop
  20:	78 c0       	rjmp	.+240    	; 0x112 <__bad_interrupt>
  22:	00 00       	nop
  24:	76 c0       	rjmp	.+236    	; 0x112 <__bad_interrupt>
  26:	00 00       	nop
  28:	74 c0       	rjmp	.+232    	; 0x112 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	72 c0       	rjmp	.+228    	; 0x112 <__bad_interrupt>
  2e:	00 00       	nop
  30:	70 c0       	rjmp	.+224    	; 0x112 <__bad_interrupt>
  32:	00 00       	nop
  34:	6e c0       	rjmp	.+220    	; 0x112 <__bad_interrupt>
  36:	00 00       	nop
  38:	6c c0       	rjmp	.+216    	; 0x112 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	6a c0       	rjmp	.+212    	; 0x112 <__bad_interrupt>
  3e:	00 00       	nop
  40:	68 c0       	rjmp	.+208    	; 0x112 <__bad_interrupt>
  42:	00 00       	nop
  44:	92 c0       	rjmp	.+292    	; 0x16a <__vector_17>
  46:	00 00       	nop
  48:	64 c0       	rjmp	.+200    	; 0x112 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	62 c0       	rjmp	.+196    	; 0x112 <__bad_interrupt>
  4e:	00 00       	nop
  50:	60 c0       	rjmp	.+192    	; 0x112 <__bad_interrupt>
  52:	00 00       	nop
  54:	5e c0       	rjmp	.+188    	; 0x112 <__bad_interrupt>
  56:	00 00       	nop
  58:	5c c0       	rjmp	.+184    	; 0x112 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	e3 c0       	rjmp	.+454    	; 0x224 <__vector_23>
  5e:	00 00       	nop
  60:	58 c0       	rjmp	.+176    	; 0x112 <__bad_interrupt>
  62:	00 00       	nop
  64:	56 c0       	rjmp	.+172    	; 0x112 <__bad_interrupt>
  66:	00 00       	nop
  68:	54 c0       	rjmp	.+168    	; 0x112 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	52 c0       	rjmp	.+164    	; 0x112 <__bad_interrupt>
  6e:	00 00       	nop
  70:	50 c0       	rjmp	.+160    	; 0x112 <__bad_interrupt>
  72:	00 00       	nop
  74:	4e c0       	rjmp	.+156    	; 0x112 <__bad_interrupt>
  76:	00 00       	nop
  78:	4c c0       	rjmp	.+152    	; 0x112 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	4a c0       	rjmp	.+148    	; 0x112 <__bad_interrupt>
  7e:	00 00       	nop
  80:	48 c0       	rjmp	.+144    	; 0x112 <__bad_interrupt>
  82:	00 00       	nop
  84:	46 c0       	rjmp	.+140    	; 0x112 <__bad_interrupt>
  86:	00 00       	nop
  88:	44 c0       	rjmp	.+136    	; 0x112 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	42 c0       	rjmp	.+132    	; 0x112 <__bad_interrupt>
  8e:	00 00       	nop
  90:	40 c0       	rjmp	.+128    	; 0x112 <__bad_interrupt>
  92:	00 00       	nop
  94:	3e c0       	rjmp	.+124    	; 0x112 <__bad_interrupt>
  96:	00 00       	nop
  98:	3c c0       	rjmp	.+120    	; 0x112 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	3a c0       	rjmp	.+116    	; 0x112 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	38 c0       	rjmp	.+112    	; 0x112 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	36 c0       	rjmp	.+108    	; 0x112 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	34 c0       	rjmp	.+104    	; 0x112 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	32 c0       	rjmp	.+100    	; 0x112 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	30 c0       	rjmp	.+96     	; 0x112 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	2e c0       	rjmp	.+92     	; 0x112 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	2c c0       	rjmp	.+88     	; 0x112 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	2a c0       	rjmp	.+84     	; 0x112 <__bad_interrupt>
  be:	00 00       	nop
  c0:	28 c0       	rjmp	.+80     	; 0x112 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	26 c0       	rjmp	.+76     	; 0x112 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	24 c0       	rjmp	.+72     	; 0x112 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	22 c0       	rjmp	.+68     	; 0x112 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	20 c0       	rjmp	.+64     	; 0x112 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	1e c0       	rjmp	.+60     	; 0x112 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	1c c0       	rjmp	.+56     	; 0x112 <__bad_interrupt>
  da:	00 00       	nop
  dc:	1a c0       	rjmp	.+52     	; 0x112 <__bad_interrupt>
  de:	00 00       	nop
  e0:	18 c0       	rjmp	.+48     	; 0x112 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e8 e0       	ldi	r30, 0x08	; 8
  fc:	f7 e0       	ldi	r31, 0x07	; 7
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a8 30       	cpi	r26, 0x08	; 8
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>
 10e:	c4 d0       	rcall	.+392    	; 0x298 <main>
 110:	f9 c2       	rjmp	.+1522   	; 0x704 <_exit>

00000112 <__bad_interrupt>:
 112:	76 cf       	rjmp	.-276    	; 0x0 <__vectors>

00000114 <iniciaTimer1>:

	// connect led to pin PB7
	//	DDRB = 0x80;

	//set up timer in PWM, Phase and frequency Correct mode
	TCCR1A |= (1 << WGM10);
 114:	e0 e8       	ldi	r30, 0x80	; 128
 116:	f0 e0       	ldi	r31, 0x00	; 0
 118:	80 81       	ld	r24, Z
 11a:	81 60       	ori	r24, 0x01	; 1
 11c:	80 83       	st	Z, r24

	// set up timer with prescaler = 64 and PWM, Phase and frequency correct mode
	TCCR1B |= (1 << WGM13) | (1 << CS11) | (1 << CS10);
 11e:	e1 e8       	ldi	r30, 0x81	; 129
 120:	f0 e0       	ldi	r31, 0x00	; 0
 122:	80 81       	ld	r24, Z
 124:	83 61       	ori	r24, 0x13	; 19
 126:	80 83       	st	Z, r24

	// initialize counter
	TCNT1 = 0;
 128:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
 12c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>

	// initialize compare value
	registro_de_comparacion2 = (dutyCycle2/100.0)*24999.0;
 130:	20 e0       	ldi	r18, 0x00	; 0
 132:	30 e0       	ldi	r19, 0x00	; 0
 134:	48 ec       	ldi	r20, 0xC8	; 200
 136:	52 e4       	ldi	r21, 0x42	; 66
 138:	60 91 00 02 	lds	r22, 0x0200	; 0x800200 <__data_start>
 13c:	70 91 01 02 	lds	r23, 0x0201	; 0x800201 <__data_start+0x1>
 140:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__data_start+0x2>
 144:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <__data_start+0x3>
 148:	6d d1       	rcall	.+730    	; 0x424 <__divsf3>
 14a:	20 e0       	ldi	r18, 0x00	; 0
 14c:	3e e4       	ldi	r19, 0x4E	; 78
 14e:	43 ec       	ldi	r20, 0xC3	; 195
 150:	56 e4       	ldi	r21, 0x46	; 70
 152:	51 d2       	rcall	.+1186   	; 0x5f6 <__mulsf3>
 154:	cf d1       	rcall	.+926    	; 0x4f4 <__fixunssfsi>
 156:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
 15a:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>

	// enable compare interrupt
	//TIMSK1 |= (1 << OCIE1A)|(1<<TOIE1); // This is wrong!!!!
	TIMSK1 |= (1 << OCIE1A); // This works
 15e:	ef e6       	ldi	r30, 0x6F	; 111
 160:	f0 e0       	ldi	r31, 0x00	; 0
 162:	80 81       	ld	r24, Z
 164:	82 60       	ori	r24, 0x02	; 2
 166:	80 83       	st	Z, r24
 168:	08 95       	ret

0000016a <__vector_17>:

}

// this ISR is fired whenever a match occurs
// hence, toggle led here itself..
ISR( TIMER1_COMPA_vect) {
 16a:	1f 92       	push	r1
 16c:	0f 92       	push	r0
 16e:	0f b6       	in	r0, 0x3f	; 63
 170:	0f 92       	push	r0
 172:	11 24       	eor	r1, r1
 174:	0b b6       	in	r0, 0x3b	; 59
 176:	0f 92       	push	r0
 178:	2f 93       	push	r18
 17a:	3f 93       	push	r19
 17c:	4f 93       	push	r20
 17e:	5f 93       	push	r21
 180:	6f 93       	push	r22
 182:	7f 93       	push	r23
 184:	8f 93       	push	r24
 186:	9f 93       	push	r25
 188:	af 93       	push	r26
 18a:	bf 93       	push	r27
 18c:	ef 93       	push	r30
 18e:	ff 93       	push	r31

	// toggle led here
	PORTB ^= (1 << pin11);
 190:	95 b1       	in	r25, 0x05	; 5
 192:	80 e2       	ldi	r24, 0x20	; 32
 194:	89 27       	eor	r24, r25
 196:	85 b9       	out	0x05, r24	; 5
	
	registro_de_comparacion2 = (dutyCycle2/100.0)*24999.0;
 198:	20 e0       	ldi	r18, 0x00	; 0
 19a:	30 e0       	ldi	r19, 0x00	; 0
 19c:	48 ec       	ldi	r20, 0xC8	; 200
 19e:	52 e4       	ldi	r21, 0x42	; 66
 1a0:	60 91 00 02 	lds	r22, 0x0200	; 0x800200 <__data_start>
 1a4:	70 91 01 02 	lds	r23, 0x0201	; 0x800201 <__data_start+0x1>
 1a8:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__data_start+0x2>
 1ac:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <__data_start+0x3>
 1b0:	39 d1       	rcall	.+626    	; 0x424 <__divsf3>
 1b2:	20 e0       	ldi	r18, 0x00	; 0
 1b4:	3e e4       	ldi	r19, 0x4E	; 78
 1b6:	43 ec       	ldi	r20, 0xC3	; 195
 1b8:	56 e4       	ldi	r21, 0x46	; 70
 1ba:	1d d2       	rcall	.+1082   	; 0x5f6 <__mulsf3>
 1bc:	9b d1       	rcall	.+822    	; 0x4f4 <__fixunssfsi>
 1be:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
 1c2:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
}
 1c6:	ff 91       	pop	r31
 1c8:	ef 91       	pop	r30
 1ca:	bf 91       	pop	r27
 1cc:	af 91       	pop	r26
 1ce:	9f 91       	pop	r25
 1d0:	8f 91       	pop	r24
 1d2:	7f 91       	pop	r23
 1d4:	6f 91       	pop	r22
 1d6:	5f 91       	pop	r21
 1d8:	4f 91       	pop	r20
 1da:	3f 91       	pop	r19
 1dc:	2f 91       	pop	r18
 1de:	0f 90       	pop	r0
 1e0:	0b be       	out	0x3b, r0	; 59
 1e2:	0f 90       	pop	r0
 1e4:	0f be       	out	0x3f, r0	; 63
 1e6:	0f 90       	pop	r0
 1e8:	1f 90       	pop	r1
 1ea:	18 95       	reti

000001ec <iniciaTimer0>:

void iniciaTimer0() {
	
	//(1 << COM0A1) clear OC0A on Compare Match
	//(1 << WGM00) | (1 << WGM01) establecer el fast pwm
	TCCR0A = (1 << COM0A1) | (1 << WGM00) | (1 << WGM01);
 1ec:	83 e8       	ldi	r24, 0x83	; 131
 1ee:	84 bd       	out	0x24, r24	; 36

	//(1 << TOIE0) indicar el tipo de interrupcion-----Timer/Counter0 Overflow Interrupt Enable----The corresponding interrupt is executed if an overflow in Timer/Counter0 occurs
	TIMSK0 = (1 << TOIE0);
 1f0:	81 e0       	ldi	r24, 0x01	; 1
 1f2:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>

	//el dutycycle va entre 0 y 255
	registro_de_comparacion1 = (dutyCycle1/100.0)*255.0;
 1f6:	20 e0       	ldi	r18, 0x00	; 0
 1f8:	30 e0       	ldi	r19, 0x00	; 0
 1fa:	48 ec       	ldi	r20, 0xC8	; 200
 1fc:	52 e4       	ldi	r21, 0x42	; 66
 1fe:	60 91 04 02 	lds	r22, 0x0204	; 0x800204 <dutyCycle1>
 202:	70 91 05 02 	lds	r23, 0x0205	; 0x800205 <dutyCycle1+0x1>
 206:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <dutyCycle1+0x2>
 20a:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <dutyCycle1+0x3>
 20e:	0a d1       	rcall	.+532    	; 0x424 <__divsf3>
 210:	20 e0       	ldi	r18, 0x00	; 0
 212:	30 e0       	ldi	r19, 0x00	; 0
 214:	4f e7       	ldi	r20, 0x7F	; 127
 216:	53 e4       	ldi	r21, 0x43	; 67
 218:	ee d1       	rcall	.+988    	; 0x5f6 <__mulsf3>
 21a:	6c d1       	rcall	.+728    	; 0x4f4 <__fixunssfsi>
 21c:	67 bd       	out	0x27, r22	; 39
	
	// cuando se usa solamente (1 << CS00), no se utiliza prescaler
	//con ambos registros se usa (clkI/O)/1024 (From prescaler)
	TCCR0B = (1 << CS00) | (1 << CS02);
 21e:	85 e0       	ldi	r24, 0x05	; 5
 220:	85 bd       	out	0x25, r24	; 37
 222:	08 95       	ret

00000224 <__vector_23>:

}

ISR(TIMER0_OVF_vect)
{
 224:	1f 92       	push	r1
 226:	0f 92       	push	r0
 228:	0f b6       	in	r0, 0x3f	; 63
 22a:	0f 92       	push	r0
 22c:	11 24       	eor	r1, r1
 22e:	0b b6       	in	r0, 0x3b	; 59
 230:	0f 92       	push	r0
 232:	2f 93       	push	r18
 234:	3f 93       	push	r19
 236:	4f 93       	push	r20
 238:	5f 93       	push	r21
 23a:	6f 93       	push	r22
 23c:	7f 93       	push	r23
 23e:	8f 93       	push	r24
 240:	9f 93       	push	r25
 242:	af 93       	push	r26
 244:	bf 93       	push	r27
 246:	ef 93       	push	r30
 248:	ff 93       	push	r31
	registro_de_comparacion1 = (dutyCycle1/100.0)*255;
 24a:	20 e0       	ldi	r18, 0x00	; 0
 24c:	30 e0       	ldi	r19, 0x00	; 0
 24e:	48 ec       	ldi	r20, 0xC8	; 200
 250:	52 e4       	ldi	r21, 0x42	; 66
 252:	60 91 04 02 	lds	r22, 0x0204	; 0x800204 <dutyCycle1>
 256:	70 91 05 02 	lds	r23, 0x0205	; 0x800205 <dutyCycle1+0x1>
 25a:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <dutyCycle1+0x2>
 25e:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <dutyCycle1+0x3>
 262:	e0 d0       	rcall	.+448    	; 0x424 <__divsf3>
 264:	20 e0       	ldi	r18, 0x00	; 0
 266:	30 e0       	ldi	r19, 0x00	; 0
 268:	4f e7       	ldi	r20, 0x7F	; 127
 26a:	53 e4       	ldi	r21, 0x43	; 67
 26c:	c4 d1       	rcall	.+904    	; 0x5f6 <__mulsf3>
 26e:	42 d1       	rcall	.+644    	; 0x4f4 <__fixunssfsi>
 270:	67 bd       	out	0x27, r22	; 39
}
 272:	ff 91       	pop	r31
 274:	ef 91       	pop	r30
 276:	bf 91       	pop	r27
 278:	af 91       	pop	r26
 27a:	9f 91       	pop	r25
 27c:	8f 91       	pop	r24
 27e:	7f 91       	pop	r23
 280:	6f 91       	pop	r22
 282:	5f 91       	pop	r21
 284:	4f 91       	pop	r20
 286:	3f 91       	pop	r19
 288:	2f 91       	pop	r18
 28a:	0f 90       	pop	r0
 28c:	0b be       	out	0x3b, r0	; 59
 28e:	0f 90       	pop	r0
 290:	0f be       	out	0x3f, r0	; 63
 292:	0f 90       	pop	r0
 294:	1f 90       	pop	r1
 296:	18 95       	reti

00000298 <main>:


int main(void) {

	//poner pines como salida
	DDRB |= (1 << pin11) | (1 << pin12) | (1 << pin13);
 298:	84 b1       	in	r24, 0x04	; 4
 29a:	80 6e       	ori	r24, 0xE0	; 224
 29c:	84 b9       	out	0x04, r24	; 4
	DDRH |= (1 << pin8) | (1 << pin9) | (1 << pin10);
 29e:	e1 e0       	ldi	r30, 0x01	; 1
 2a0:	f1 e0       	ldi	r31, 0x01	; 1
 2a2:	80 81       	ld	r24, Z
 2a4:	80 67       	ori	r24, 0x70	; 112
 2a6:	80 83       	st	Z, r24

	iniciaTimer0();
 2a8:	a1 df       	rcall	.-190    	; 0x1ec <iniciaTimer0>

	// initialize timer
	iniciaTimer1();
 2aa:	34 df       	rcall	.-408    	; 0x114 <iniciaTimer1>

	

	//activar interrupciones globalmente
	sei();
 2ac:	78 94       	sei
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2ae:	2f e7       	ldi	r18, 0x7F	; 127
 2b0:	8a e1       	ldi	r24, 0x1A	; 26
 2b2:	96 e0       	ldi	r25, 0x06	; 6
 2b4:	21 50       	subi	r18, 0x01	; 1
 2b6:	80 40       	sbci	r24, 0x00	; 0
 2b8:	90 40       	sbci	r25, 0x00	; 0
 2ba:	e1 f7       	brne	.-8      	; 0x2b4 <main+0x1c>
 2bc:	00 c0       	rjmp	.+0      	; 0x2be <main+0x26>
 2be:	00 00       	nop
	{
		
		_delay_ms(100);
		
		//primer pwm
		dutyCycle1 += 10;
 2c0:	20 e0       	ldi	r18, 0x00	; 0
 2c2:	30 e0       	ldi	r19, 0x00	; 0
 2c4:	40 e2       	ldi	r20, 0x20	; 32
 2c6:	51 e4       	ldi	r21, 0x41	; 65
 2c8:	60 91 04 02 	lds	r22, 0x0204	; 0x800204 <dutyCycle1>
 2cc:	70 91 05 02 	lds	r23, 0x0205	; 0x800205 <dutyCycle1+0x1>
 2d0:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <dutyCycle1+0x2>
 2d4:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <dutyCycle1+0x3>
 2d8:	41 d0       	rcall	.+130    	; 0x35c <__addsf3>
 2da:	6b 01       	movw	r12, r22
 2dc:	7c 01       	movw	r14, r24
		if(dutyCycle1 > 100)
 2de:	20 e0       	ldi	r18, 0x00	; 0
 2e0:	30 e0       	ldi	r19, 0x00	; 0
 2e2:	48 ec       	ldi	r20, 0xC8	; 200
 2e4:	52 e4       	ldi	r21, 0x42	; 66
 2e6:	83 d1       	rcall	.+774    	; 0x5ee <__gesf2>
 2e8:	18 16       	cp	r1, r24
 2ea:	4c f0       	brlt	.+18     	; 0x2fe <main+0x66>
	{
		
		_delay_ms(100);
		
		//primer pwm
		dutyCycle1 += 10;
 2ec:	c0 92 04 02 	sts	0x0204, r12	; 0x800204 <dutyCycle1>
 2f0:	d0 92 05 02 	sts	0x0205, r13	; 0x800205 <dutyCycle1+0x1>
 2f4:	e0 92 06 02 	sts	0x0206, r14	; 0x800206 <dutyCycle1+0x2>
 2f8:	f0 92 07 02 	sts	0x0207, r15	; 0x800207 <dutyCycle1+0x3>
 2fc:	08 c0       	rjmp	.+16     	; 0x30e <main+0x76>
		if(dutyCycle1 > 100)
		{
			dutyCycle1 = 0;
 2fe:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <dutyCycle1>
 302:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <dutyCycle1+0x1>
 306:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <dutyCycle1+0x2>
 30a:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <dutyCycle1+0x3>
		}

		//segundo pwm
		dutyCycle2 += 10;
 30e:	20 e0       	ldi	r18, 0x00	; 0
 310:	30 e0       	ldi	r19, 0x00	; 0
 312:	40 e2       	ldi	r20, 0x20	; 32
 314:	51 e4       	ldi	r21, 0x41	; 65
 316:	60 91 00 02 	lds	r22, 0x0200	; 0x800200 <__data_start>
 31a:	70 91 01 02 	lds	r23, 0x0201	; 0x800201 <__data_start+0x1>
 31e:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__data_start+0x2>
 322:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <__data_start+0x3>
 326:	1a d0       	rcall	.+52     	; 0x35c <__addsf3>
 328:	60 93 00 02 	sts	0x0200, r22	; 0x800200 <__data_start>
 32c:	70 93 01 02 	sts	0x0201, r23	; 0x800201 <__data_start+0x1>
 330:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <__data_start+0x2>
 334:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <__data_start+0x3>
		if(dutyCycle2 > 100)
 338:	20 e0       	ldi	r18, 0x00	; 0
 33a:	30 e0       	ldi	r19, 0x00	; 0
 33c:	48 ec       	ldi	r20, 0xC8	; 200
 33e:	52 e4       	ldi	r21, 0x42	; 66
 340:	56 d1       	rcall	.+684    	; 0x5ee <__gesf2>
 342:	18 16       	cp	r1, r24
 344:	0c f0       	brlt	.+2      	; 0x348 <main+0xb0>
 346:	b3 cf       	rjmp	.-154    	; 0x2ae <main+0x16>
		{
			dutyCycle2 = 0;
 348:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__data_start>
 34c:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <__data_start+0x1>
 350:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <__data_start+0x2>
 354:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <__data_start+0x3>
 358:	aa cf       	rjmp	.-172    	; 0x2ae <main+0x16>

0000035a <__subsf3>:
 35a:	50 58       	subi	r21, 0x80	; 128

0000035c <__addsf3>:
 35c:	bb 27       	eor	r27, r27
 35e:	aa 27       	eor	r26, r26
 360:	0e d0       	rcall	.+28     	; 0x37e <__addsf3x>
 362:	0b c1       	rjmp	.+534    	; 0x57a <__fp_round>
 364:	fc d0       	rcall	.+504    	; 0x55e <__fp_pscA>
 366:	30 f0       	brcs	.+12     	; 0x374 <__addsf3+0x18>
 368:	01 d1       	rcall	.+514    	; 0x56c <__fp_pscB>
 36a:	20 f0       	brcs	.+8      	; 0x374 <__addsf3+0x18>
 36c:	31 f4       	brne	.+12     	; 0x37a <__addsf3+0x1e>
 36e:	9f 3f       	cpi	r25, 0xFF	; 255
 370:	11 f4       	brne	.+4      	; 0x376 <__addsf3+0x1a>
 372:	1e f4       	brtc	.+6      	; 0x37a <__addsf3+0x1e>
 374:	f1 c0       	rjmp	.+482    	; 0x558 <__fp_nan>
 376:	0e f4       	brtc	.+2      	; 0x37a <__addsf3+0x1e>
 378:	e0 95       	com	r30
 37a:	e7 fb       	bst	r30, 7
 37c:	e7 c0       	rjmp	.+462    	; 0x54c <__fp_inf>

0000037e <__addsf3x>:
 37e:	e9 2f       	mov	r30, r25
 380:	0d d1       	rcall	.+538    	; 0x59c <__fp_split3>
 382:	80 f3       	brcs	.-32     	; 0x364 <__addsf3+0x8>
 384:	ba 17       	cp	r27, r26
 386:	62 07       	cpc	r22, r18
 388:	73 07       	cpc	r23, r19
 38a:	84 07       	cpc	r24, r20
 38c:	95 07       	cpc	r25, r21
 38e:	18 f0       	brcs	.+6      	; 0x396 <__addsf3x+0x18>
 390:	71 f4       	brne	.+28     	; 0x3ae <__addsf3x+0x30>
 392:	9e f5       	brtc	.+102    	; 0x3fa <__addsf3x+0x7c>
 394:	25 c1       	rjmp	.+586    	; 0x5e0 <__fp_zero>
 396:	0e f4       	brtc	.+2      	; 0x39a <__addsf3x+0x1c>
 398:	e0 95       	com	r30
 39a:	0b 2e       	mov	r0, r27
 39c:	ba 2f       	mov	r27, r26
 39e:	a0 2d       	mov	r26, r0
 3a0:	0b 01       	movw	r0, r22
 3a2:	b9 01       	movw	r22, r18
 3a4:	90 01       	movw	r18, r0
 3a6:	0c 01       	movw	r0, r24
 3a8:	ca 01       	movw	r24, r20
 3aa:	a0 01       	movw	r20, r0
 3ac:	11 24       	eor	r1, r1
 3ae:	ff 27       	eor	r31, r31
 3b0:	59 1b       	sub	r21, r25
 3b2:	99 f0       	breq	.+38     	; 0x3da <__addsf3x+0x5c>
 3b4:	59 3f       	cpi	r21, 0xF9	; 249
 3b6:	50 f4       	brcc	.+20     	; 0x3cc <__addsf3x+0x4e>
 3b8:	50 3e       	cpi	r21, 0xE0	; 224
 3ba:	68 f1       	brcs	.+90     	; 0x416 <__FUSE_REGION_LENGTH__+0x16>
 3bc:	1a 16       	cp	r1, r26
 3be:	f0 40       	sbci	r31, 0x00	; 0
 3c0:	a2 2f       	mov	r26, r18
 3c2:	23 2f       	mov	r18, r19
 3c4:	34 2f       	mov	r19, r20
 3c6:	44 27       	eor	r20, r20
 3c8:	58 5f       	subi	r21, 0xF8	; 248
 3ca:	f3 cf       	rjmp	.-26     	; 0x3b2 <__addsf3x+0x34>
 3cc:	46 95       	lsr	r20
 3ce:	37 95       	ror	r19
 3d0:	27 95       	ror	r18
 3d2:	a7 95       	ror	r26
 3d4:	f0 40       	sbci	r31, 0x00	; 0
 3d6:	53 95       	inc	r21
 3d8:	c9 f7       	brne	.-14     	; 0x3cc <__addsf3x+0x4e>
 3da:	7e f4       	brtc	.+30     	; 0x3fa <__addsf3x+0x7c>
 3dc:	1f 16       	cp	r1, r31
 3de:	ba 0b       	sbc	r27, r26
 3e0:	62 0b       	sbc	r22, r18
 3e2:	73 0b       	sbc	r23, r19
 3e4:	84 0b       	sbc	r24, r20
 3e6:	ba f0       	brmi	.+46     	; 0x416 <__FUSE_REGION_LENGTH__+0x16>
 3e8:	91 50       	subi	r25, 0x01	; 1
 3ea:	a1 f0       	breq	.+40     	; 0x414 <__FUSE_REGION_LENGTH__+0x14>
 3ec:	ff 0f       	add	r31, r31
 3ee:	bb 1f       	adc	r27, r27
 3f0:	66 1f       	adc	r22, r22
 3f2:	77 1f       	adc	r23, r23
 3f4:	88 1f       	adc	r24, r24
 3f6:	c2 f7       	brpl	.-16     	; 0x3e8 <__addsf3x+0x6a>
 3f8:	0e c0       	rjmp	.+28     	; 0x416 <__FUSE_REGION_LENGTH__+0x16>
 3fa:	ba 0f       	add	r27, r26
 3fc:	62 1f       	adc	r22, r18
 3fe:	73 1f       	adc	r23, r19
 400:	84 1f       	adc	r24, r20
 402:	48 f4       	brcc	.+18     	; 0x416 <__FUSE_REGION_LENGTH__+0x16>
 404:	87 95       	ror	r24
 406:	77 95       	ror	r23
 408:	67 95       	ror	r22
 40a:	b7 95       	ror	r27
 40c:	f7 95       	ror	r31
 40e:	9e 3f       	cpi	r25, 0xFE	; 254
 410:	08 f0       	brcs	.+2      	; 0x414 <__FUSE_REGION_LENGTH__+0x14>
 412:	b3 cf       	rjmp	.-154    	; 0x37a <__addsf3+0x1e>
 414:	93 95       	inc	r25
 416:	88 0f       	add	r24, r24
 418:	08 f0       	brcs	.+2      	; 0x41c <__FUSE_REGION_LENGTH__+0x1c>
 41a:	99 27       	eor	r25, r25
 41c:	ee 0f       	add	r30, r30
 41e:	97 95       	ror	r25
 420:	87 95       	ror	r24
 422:	08 95       	ret

00000424 <__divsf3>:
 424:	0c d0       	rcall	.+24     	; 0x43e <__divsf3x>
 426:	a9 c0       	rjmp	.+338    	; 0x57a <__fp_round>
 428:	a1 d0       	rcall	.+322    	; 0x56c <__fp_pscB>
 42a:	40 f0       	brcs	.+16     	; 0x43c <__divsf3+0x18>
 42c:	98 d0       	rcall	.+304    	; 0x55e <__fp_pscA>
 42e:	30 f0       	brcs	.+12     	; 0x43c <__divsf3+0x18>
 430:	21 f4       	brne	.+8      	; 0x43a <__divsf3+0x16>
 432:	5f 3f       	cpi	r21, 0xFF	; 255
 434:	19 f0       	breq	.+6      	; 0x43c <__divsf3+0x18>
 436:	8a c0       	rjmp	.+276    	; 0x54c <__fp_inf>
 438:	51 11       	cpse	r21, r1
 43a:	d3 c0       	rjmp	.+422    	; 0x5e2 <__fp_szero>
 43c:	8d c0       	rjmp	.+282    	; 0x558 <__fp_nan>

0000043e <__divsf3x>:
 43e:	ae d0       	rcall	.+348    	; 0x59c <__fp_split3>
 440:	98 f3       	brcs	.-26     	; 0x428 <__divsf3+0x4>

00000442 <__divsf3_pse>:
 442:	99 23       	and	r25, r25
 444:	c9 f3       	breq	.-14     	; 0x438 <__divsf3+0x14>
 446:	55 23       	and	r21, r21
 448:	b1 f3       	breq	.-20     	; 0x436 <__divsf3+0x12>
 44a:	95 1b       	sub	r25, r21
 44c:	55 0b       	sbc	r21, r21
 44e:	bb 27       	eor	r27, r27
 450:	aa 27       	eor	r26, r26
 452:	62 17       	cp	r22, r18
 454:	73 07       	cpc	r23, r19
 456:	84 07       	cpc	r24, r20
 458:	38 f0       	brcs	.+14     	; 0x468 <__divsf3_pse+0x26>
 45a:	9f 5f       	subi	r25, 0xFF	; 255
 45c:	5f 4f       	sbci	r21, 0xFF	; 255
 45e:	22 0f       	add	r18, r18
 460:	33 1f       	adc	r19, r19
 462:	44 1f       	adc	r20, r20
 464:	aa 1f       	adc	r26, r26
 466:	a9 f3       	breq	.-22     	; 0x452 <__divsf3_pse+0x10>
 468:	33 d0       	rcall	.+102    	; 0x4d0 <__divsf3_pse+0x8e>
 46a:	0e 2e       	mov	r0, r30
 46c:	3a f0       	brmi	.+14     	; 0x47c <__divsf3_pse+0x3a>
 46e:	e0 e8       	ldi	r30, 0x80	; 128
 470:	30 d0       	rcall	.+96     	; 0x4d2 <__divsf3_pse+0x90>
 472:	91 50       	subi	r25, 0x01	; 1
 474:	50 40       	sbci	r21, 0x00	; 0
 476:	e6 95       	lsr	r30
 478:	00 1c       	adc	r0, r0
 47a:	ca f7       	brpl	.-14     	; 0x46e <__divsf3_pse+0x2c>
 47c:	29 d0       	rcall	.+82     	; 0x4d0 <__divsf3_pse+0x8e>
 47e:	fe 2f       	mov	r31, r30
 480:	27 d0       	rcall	.+78     	; 0x4d0 <__divsf3_pse+0x8e>
 482:	66 0f       	add	r22, r22
 484:	77 1f       	adc	r23, r23
 486:	88 1f       	adc	r24, r24
 488:	bb 1f       	adc	r27, r27
 48a:	26 17       	cp	r18, r22
 48c:	37 07       	cpc	r19, r23
 48e:	48 07       	cpc	r20, r24
 490:	ab 07       	cpc	r26, r27
 492:	b0 e8       	ldi	r27, 0x80	; 128
 494:	09 f0       	breq	.+2      	; 0x498 <__divsf3_pse+0x56>
 496:	bb 0b       	sbc	r27, r27
 498:	80 2d       	mov	r24, r0
 49a:	bf 01       	movw	r22, r30
 49c:	ff 27       	eor	r31, r31
 49e:	93 58       	subi	r25, 0x83	; 131
 4a0:	5f 4f       	sbci	r21, 0xFF	; 255
 4a2:	2a f0       	brmi	.+10     	; 0x4ae <__divsf3_pse+0x6c>
 4a4:	9e 3f       	cpi	r25, 0xFE	; 254
 4a6:	51 05       	cpc	r21, r1
 4a8:	68 f0       	brcs	.+26     	; 0x4c4 <__divsf3_pse+0x82>
 4aa:	50 c0       	rjmp	.+160    	; 0x54c <__fp_inf>
 4ac:	9a c0       	rjmp	.+308    	; 0x5e2 <__fp_szero>
 4ae:	5f 3f       	cpi	r21, 0xFF	; 255
 4b0:	ec f3       	brlt	.-6      	; 0x4ac <__divsf3_pse+0x6a>
 4b2:	98 3e       	cpi	r25, 0xE8	; 232
 4b4:	dc f3       	brlt	.-10     	; 0x4ac <__divsf3_pse+0x6a>
 4b6:	86 95       	lsr	r24
 4b8:	77 95       	ror	r23
 4ba:	67 95       	ror	r22
 4bc:	b7 95       	ror	r27
 4be:	f7 95       	ror	r31
 4c0:	9f 5f       	subi	r25, 0xFF	; 255
 4c2:	c9 f7       	brne	.-14     	; 0x4b6 <__divsf3_pse+0x74>
 4c4:	88 0f       	add	r24, r24
 4c6:	91 1d       	adc	r25, r1
 4c8:	96 95       	lsr	r25
 4ca:	87 95       	ror	r24
 4cc:	97 f9       	bld	r25, 7
 4ce:	08 95       	ret
 4d0:	e1 e0       	ldi	r30, 0x01	; 1
 4d2:	66 0f       	add	r22, r22
 4d4:	77 1f       	adc	r23, r23
 4d6:	88 1f       	adc	r24, r24
 4d8:	bb 1f       	adc	r27, r27
 4da:	62 17       	cp	r22, r18
 4dc:	73 07       	cpc	r23, r19
 4de:	84 07       	cpc	r24, r20
 4e0:	ba 07       	cpc	r27, r26
 4e2:	20 f0       	brcs	.+8      	; 0x4ec <__divsf3_pse+0xaa>
 4e4:	62 1b       	sub	r22, r18
 4e6:	73 0b       	sbc	r23, r19
 4e8:	84 0b       	sbc	r24, r20
 4ea:	ba 0b       	sbc	r27, r26
 4ec:	ee 1f       	adc	r30, r30
 4ee:	88 f7       	brcc	.-30     	; 0x4d2 <__divsf3_pse+0x90>
 4f0:	e0 95       	com	r30
 4f2:	08 95       	ret

000004f4 <__fixunssfsi>:
 4f4:	5b d0       	rcall	.+182    	; 0x5ac <__fp_splitA>
 4f6:	88 f0       	brcs	.+34     	; 0x51a <__fixunssfsi+0x26>
 4f8:	9f 57       	subi	r25, 0x7F	; 127
 4fa:	90 f0       	brcs	.+36     	; 0x520 <__fixunssfsi+0x2c>
 4fc:	b9 2f       	mov	r27, r25
 4fe:	99 27       	eor	r25, r25
 500:	b7 51       	subi	r27, 0x17	; 23
 502:	a0 f0       	brcs	.+40     	; 0x52c <__fixunssfsi+0x38>
 504:	d1 f0       	breq	.+52     	; 0x53a <__fixunssfsi+0x46>
 506:	66 0f       	add	r22, r22
 508:	77 1f       	adc	r23, r23
 50a:	88 1f       	adc	r24, r24
 50c:	99 1f       	adc	r25, r25
 50e:	1a f0       	brmi	.+6      	; 0x516 <__fixunssfsi+0x22>
 510:	ba 95       	dec	r27
 512:	c9 f7       	brne	.-14     	; 0x506 <__fixunssfsi+0x12>
 514:	12 c0       	rjmp	.+36     	; 0x53a <__fixunssfsi+0x46>
 516:	b1 30       	cpi	r27, 0x01	; 1
 518:	81 f0       	breq	.+32     	; 0x53a <__fixunssfsi+0x46>
 51a:	62 d0       	rcall	.+196    	; 0x5e0 <__fp_zero>
 51c:	b1 e0       	ldi	r27, 0x01	; 1
 51e:	08 95       	ret
 520:	5f c0       	rjmp	.+190    	; 0x5e0 <__fp_zero>
 522:	67 2f       	mov	r22, r23
 524:	78 2f       	mov	r23, r24
 526:	88 27       	eor	r24, r24
 528:	b8 5f       	subi	r27, 0xF8	; 248
 52a:	39 f0       	breq	.+14     	; 0x53a <__fixunssfsi+0x46>
 52c:	b9 3f       	cpi	r27, 0xF9	; 249
 52e:	cc f3       	brlt	.-14     	; 0x522 <__fixunssfsi+0x2e>
 530:	86 95       	lsr	r24
 532:	77 95       	ror	r23
 534:	67 95       	ror	r22
 536:	b3 95       	inc	r27
 538:	d9 f7       	brne	.-10     	; 0x530 <__fixunssfsi+0x3c>
 53a:	3e f4       	brtc	.+14     	; 0x54a <__fixunssfsi+0x56>
 53c:	90 95       	com	r25
 53e:	80 95       	com	r24
 540:	70 95       	com	r23
 542:	61 95       	neg	r22
 544:	7f 4f       	sbci	r23, 0xFF	; 255
 546:	8f 4f       	sbci	r24, 0xFF	; 255
 548:	9f 4f       	sbci	r25, 0xFF	; 255
 54a:	08 95       	ret

0000054c <__fp_inf>:
 54c:	97 f9       	bld	r25, 7
 54e:	9f 67       	ori	r25, 0x7F	; 127
 550:	80 e8       	ldi	r24, 0x80	; 128
 552:	70 e0       	ldi	r23, 0x00	; 0
 554:	60 e0       	ldi	r22, 0x00	; 0
 556:	08 95       	ret

00000558 <__fp_nan>:
 558:	9f ef       	ldi	r25, 0xFF	; 255
 55a:	80 ec       	ldi	r24, 0xC0	; 192
 55c:	08 95       	ret

0000055e <__fp_pscA>:
 55e:	00 24       	eor	r0, r0
 560:	0a 94       	dec	r0
 562:	16 16       	cp	r1, r22
 564:	17 06       	cpc	r1, r23
 566:	18 06       	cpc	r1, r24
 568:	09 06       	cpc	r0, r25
 56a:	08 95       	ret

0000056c <__fp_pscB>:
 56c:	00 24       	eor	r0, r0
 56e:	0a 94       	dec	r0
 570:	12 16       	cp	r1, r18
 572:	13 06       	cpc	r1, r19
 574:	14 06       	cpc	r1, r20
 576:	05 06       	cpc	r0, r21
 578:	08 95       	ret

0000057a <__fp_round>:
 57a:	09 2e       	mov	r0, r25
 57c:	03 94       	inc	r0
 57e:	00 0c       	add	r0, r0
 580:	11 f4       	brne	.+4      	; 0x586 <__fp_round+0xc>
 582:	88 23       	and	r24, r24
 584:	52 f0       	brmi	.+20     	; 0x59a <__fp_round+0x20>
 586:	bb 0f       	add	r27, r27
 588:	40 f4       	brcc	.+16     	; 0x59a <__fp_round+0x20>
 58a:	bf 2b       	or	r27, r31
 58c:	11 f4       	brne	.+4      	; 0x592 <__fp_round+0x18>
 58e:	60 ff       	sbrs	r22, 0
 590:	04 c0       	rjmp	.+8      	; 0x59a <__fp_round+0x20>
 592:	6f 5f       	subi	r22, 0xFF	; 255
 594:	7f 4f       	sbci	r23, 0xFF	; 255
 596:	8f 4f       	sbci	r24, 0xFF	; 255
 598:	9f 4f       	sbci	r25, 0xFF	; 255
 59a:	08 95       	ret

0000059c <__fp_split3>:
 59c:	57 fd       	sbrc	r21, 7
 59e:	90 58       	subi	r25, 0x80	; 128
 5a0:	44 0f       	add	r20, r20
 5a2:	55 1f       	adc	r21, r21
 5a4:	59 f0       	breq	.+22     	; 0x5bc <__fp_splitA+0x10>
 5a6:	5f 3f       	cpi	r21, 0xFF	; 255
 5a8:	71 f0       	breq	.+28     	; 0x5c6 <__fp_splitA+0x1a>
 5aa:	47 95       	ror	r20

000005ac <__fp_splitA>:
 5ac:	88 0f       	add	r24, r24
 5ae:	97 fb       	bst	r25, 7
 5b0:	99 1f       	adc	r25, r25
 5b2:	61 f0       	breq	.+24     	; 0x5cc <__fp_splitA+0x20>
 5b4:	9f 3f       	cpi	r25, 0xFF	; 255
 5b6:	79 f0       	breq	.+30     	; 0x5d6 <__fp_splitA+0x2a>
 5b8:	87 95       	ror	r24
 5ba:	08 95       	ret
 5bc:	12 16       	cp	r1, r18
 5be:	13 06       	cpc	r1, r19
 5c0:	14 06       	cpc	r1, r20
 5c2:	55 1f       	adc	r21, r21
 5c4:	f2 cf       	rjmp	.-28     	; 0x5aa <__fp_split3+0xe>
 5c6:	46 95       	lsr	r20
 5c8:	f1 df       	rcall	.-30     	; 0x5ac <__fp_splitA>
 5ca:	08 c0       	rjmp	.+16     	; 0x5dc <__fp_splitA+0x30>
 5cc:	16 16       	cp	r1, r22
 5ce:	17 06       	cpc	r1, r23
 5d0:	18 06       	cpc	r1, r24
 5d2:	99 1f       	adc	r25, r25
 5d4:	f1 cf       	rjmp	.-30     	; 0x5b8 <__fp_splitA+0xc>
 5d6:	86 95       	lsr	r24
 5d8:	71 05       	cpc	r23, r1
 5da:	61 05       	cpc	r22, r1
 5dc:	08 94       	sec
 5de:	08 95       	ret

000005e0 <__fp_zero>:
 5e0:	e8 94       	clt

000005e2 <__fp_szero>:
 5e2:	bb 27       	eor	r27, r27
 5e4:	66 27       	eor	r22, r22
 5e6:	77 27       	eor	r23, r23
 5e8:	cb 01       	movw	r24, r22
 5ea:	97 f9       	bld	r25, 7
 5ec:	08 95       	ret

000005ee <__gesf2>:
 5ee:	66 d0       	rcall	.+204    	; 0x6bc <__fp_cmp>
 5f0:	08 f4       	brcc	.+2      	; 0x5f4 <__gesf2+0x6>
 5f2:	8f ef       	ldi	r24, 0xFF	; 255
 5f4:	08 95       	ret

000005f6 <__mulsf3>:
 5f6:	0b d0       	rcall	.+22     	; 0x60e <__mulsf3x>
 5f8:	c0 cf       	rjmp	.-128    	; 0x57a <__fp_round>
 5fa:	b1 df       	rcall	.-158    	; 0x55e <__fp_pscA>
 5fc:	28 f0       	brcs	.+10     	; 0x608 <__mulsf3+0x12>
 5fe:	b6 df       	rcall	.-148    	; 0x56c <__fp_pscB>
 600:	18 f0       	brcs	.+6      	; 0x608 <__mulsf3+0x12>
 602:	95 23       	and	r25, r21
 604:	09 f0       	breq	.+2      	; 0x608 <__mulsf3+0x12>
 606:	a2 cf       	rjmp	.-188    	; 0x54c <__fp_inf>
 608:	a7 cf       	rjmp	.-178    	; 0x558 <__fp_nan>
 60a:	11 24       	eor	r1, r1
 60c:	ea cf       	rjmp	.-44     	; 0x5e2 <__fp_szero>

0000060e <__mulsf3x>:
 60e:	c6 df       	rcall	.-116    	; 0x59c <__fp_split3>
 610:	a0 f3       	brcs	.-24     	; 0x5fa <__mulsf3+0x4>

00000612 <__mulsf3_pse>:
 612:	95 9f       	mul	r25, r21
 614:	d1 f3       	breq	.-12     	; 0x60a <__mulsf3+0x14>
 616:	95 0f       	add	r25, r21
 618:	50 e0       	ldi	r21, 0x00	; 0
 61a:	55 1f       	adc	r21, r21
 61c:	62 9f       	mul	r22, r18
 61e:	f0 01       	movw	r30, r0
 620:	72 9f       	mul	r23, r18
 622:	bb 27       	eor	r27, r27
 624:	f0 0d       	add	r31, r0
 626:	b1 1d       	adc	r27, r1
 628:	63 9f       	mul	r22, r19
 62a:	aa 27       	eor	r26, r26
 62c:	f0 0d       	add	r31, r0
 62e:	b1 1d       	adc	r27, r1
 630:	aa 1f       	adc	r26, r26
 632:	64 9f       	mul	r22, r20
 634:	66 27       	eor	r22, r22
 636:	b0 0d       	add	r27, r0
 638:	a1 1d       	adc	r26, r1
 63a:	66 1f       	adc	r22, r22
 63c:	82 9f       	mul	r24, r18
 63e:	22 27       	eor	r18, r18
 640:	b0 0d       	add	r27, r0
 642:	a1 1d       	adc	r26, r1
 644:	62 1f       	adc	r22, r18
 646:	73 9f       	mul	r23, r19
 648:	b0 0d       	add	r27, r0
 64a:	a1 1d       	adc	r26, r1
 64c:	62 1f       	adc	r22, r18
 64e:	83 9f       	mul	r24, r19
 650:	a0 0d       	add	r26, r0
 652:	61 1d       	adc	r22, r1
 654:	22 1f       	adc	r18, r18
 656:	74 9f       	mul	r23, r20
 658:	33 27       	eor	r19, r19
 65a:	a0 0d       	add	r26, r0
 65c:	61 1d       	adc	r22, r1
 65e:	23 1f       	adc	r18, r19
 660:	84 9f       	mul	r24, r20
 662:	60 0d       	add	r22, r0
 664:	21 1d       	adc	r18, r1
 666:	82 2f       	mov	r24, r18
 668:	76 2f       	mov	r23, r22
 66a:	6a 2f       	mov	r22, r26
 66c:	11 24       	eor	r1, r1
 66e:	9f 57       	subi	r25, 0x7F	; 127
 670:	50 40       	sbci	r21, 0x00	; 0
 672:	8a f0       	brmi	.+34     	; 0x696 <__mulsf3_pse+0x84>
 674:	e1 f0       	breq	.+56     	; 0x6ae <__mulsf3_pse+0x9c>
 676:	88 23       	and	r24, r24
 678:	4a f0       	brmi	.+18     	; 0x68c <__mulsf3_pse+0x7a>
 67a:	ee 0f       	add	r30, r30
 67c:	ff 1f       	adc	r31, r31
 67e:	bb 1f       	adc	r27, r27
 680:	66 1f       	adc	r22, r22
 682:	77 1f       	adc	r23, r23
 684:	88 1f       	adc	r24, r24
 686:	91 50       	subi	r25, 0x01	; 1
 688:	50 40       	sbci	r21, 0x00	; 0
 68a:	a9 f7       	brne	.-22     	; 0x676 <__mulsf3_pse+0x64>
 68c:	9e 3f       	cpi	r25, 0xFE	; 254
 68e:	51 05       	cpc	r21, r1
 690:	70 f0       	brcs	.+28     	; 0x6ae <__mulsf3_pse+0x9c>
 692:	5c cf       	rjmp	.-328    	; 0x54c <__fp_inf>
 694:	a6 cf       	rjmp	.-180    	; 0x5e2 <__fp_szero>
 696:	5f 3f       	cpi	r21, 0xFF	; 255
 698:	ec f3       	brlt	.-6      	; 0x694 <__mulsf3_pse+0x82>
 69a:	98 3e       	cpi	r25, 0xE8	; 232
 69c:	dc f3       	brlt	.-10     	; 0x694 <__mulsf3_pse+0x82>
 69e:	86 95       	lsr	r24
 6a0:	77 95       	ror	r23
 6a2:	67 95       	ror	r22
 6a4:	b7 95       	ror	r27
 6a6:	f7 95       	ror	r31
 6a8:	e7 95       	ror	r30
 6aa:	9f 5f       	subi	r25, 0xFF	; 255
 6ac:	c1 f7       	brne	.-16     	; 0x69e <__mulsf3_pse+0x8c>
 6ae:	fe 2b       	or	r31, r30
 6b0:	88 0f       	add	r24, r24
 6b2:	91 1d       	adc	r25, r1
 6b4:	96 95       	lsr	r25
 6b6:	87 95       	ror	r24
 6b8:	97 f9       	bld	r25, 7
 6ba:	08 95       	ret

000006bc <__fp_cmp>:
 6bc:	99 0f       	add	r25, r25
 6be:	00 08       	sbc	r0, r0
 6c0:	55 0f       	add	r21, r21
 6c2:	aa 0b       	sbc	r26, r26
 6c4:	e0 e8       	ldi	r30, 0x80	; 128
 6c6:	fe ef       	ldi	r31, 0xFE	; 254
 6c8:	16 16       	cp	r1, r22
 6ca:	17 06       	cpc	r1, r23
 6cc:	e8 07       	cpc	r30, r24
 6ce:	f9 07       	cpc	r31, r25
 6d0:	c0 f0       	brcs	.+48     	; 0x702 <__fp_cmp+0x46>
 6d2:	12 16       	cp	r1, r18
 6d4:	13 06       	cpc	r1, r19
 6d6:	e4 07       	cpc	r30, r20
 6d8:	f5 07       	cpc	r31, r21
 6da:	98 f0       	brcs	.+38     	; 0x702 <__fp_cmp+0x46>
 6dc:	62 1b       	sub	r22, r18
 6de:	73 0b       	sbc	r23, r19
 6e0:	84 0b       	sbc	r24, r20
 6e2:	95 0b       	sbc	r25, r21
 6e4:	39 f4       	brne	.+14     	; 0x6f4 <__fp_cmp+0x38>
 6e6:	0a 26       	eor	r0, r26
 6e8:	61 f0       	breq	.+24     	; 0x702 <__fp_cmp+0x46>
 6ea:	23 2b       	or	r18, r19
 6ec:	24 2b       	or	r18, r20
 6ee:	25 2b       	or	r18, r21
 6f0:	21 f4       	brne	.+8      	; 0x6fa <__fp_cmp+0x3e>
 6f2:	08 95       	ret
 6f4:	0a 26       	eor	r0, r26
 6f6:	09 f4       	brne	.+2      	; 0x6fa <__fp_cmp+0x3e>
 6f8:	a1 40       	sbci	r26, 0x01	; 1
 6fa:	a6 95       	lsr	r26
 6fc:	8f ef       	ldi	r24, 0xFF	; 255
 6fe:	81 1d       	adc	r24, r1
 700:	81 1d       	adc	r24, r1
 702:	08 95       	ret

00000704 <_exit>:
 704:	f8 94       	cli

00000706 <__stop_program>:
 706:	ff cf       	rjmp	.-2      	; 0x706 <__stop_program>
