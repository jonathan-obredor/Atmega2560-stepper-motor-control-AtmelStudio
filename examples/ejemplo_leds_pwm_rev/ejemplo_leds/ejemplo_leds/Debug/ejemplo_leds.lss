
ejemplo_leds.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800200  00000732  000007a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000732  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000007ae  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000007e0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  00000820  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000001a9  00000000  00000000  00000860  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000110  00000000  00000000  00000a09  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001f1  00000000  00000000  00000b19  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000f4  00000000  00000000  00000d0c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001f1  00000000  00000000  00000e00  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000196  00000000  00000000  00000ff1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00001187  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	86 c0       	rjmp	.+268    	; 0x112 <__bad_interrupt>
   6:	00 00       	nop
   8:	84 c0       	rjmp	.+264    	; 0x112 <__bad_interrupt>
   a:	00 00       	nop
   c:	82 c0       	rjmp	.+260    	; 0x112 <__bad_interrupt>
   e:	00 00       	nop
  10:	80 c0       	rjmp	.+256    	; 0x112 <__bad_interrupt>
  12:	00 00       	nop
  14:	7e c0       	rjmp	.+252    	; 0x112 <__bad_interrupt>
  16:	00 00       	nop
  18:	7c c0       	rjmp	.+248    	; 0x112 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	7a c0       	rjmp	.+244    	; 0x112 <__bad_interrupt>
  1e:	00 00       	nop
  20:	78 c0       	rjmp	.+240    	; 0x112 <__bad_interrupt>
  22:	00 00       	nop
  24:	76 c0       	rjmp	.+236    	; 0x112 <__bad_interrupt>
  26:	00 00       	nop
  28:	74 c0       	rjmp	.+232    	; 0x112 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	72 c0       	rjmp	.+228    	; 0x112 <__bad_interrupt>
  2e:	00 00       	nop
  30:	70 c0       	rjmp	.+224    	; 0x112 <__bad_interrupt>
  32:	00 00       	nop
  34:	6e c0       	rjmp	.+220    	; 0x112 <__bad_interrupt>
  36:	00 00       	nop
  38:	6c c0       	rjmp	.+216    	; 0x112 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	6a c0       	rjmp	.+212    	; 0x112 <__bad_interrupt>
  3e:	00 00       	nop
  40:	68 c0       	rjmp	.+208    	; 0x112 <__bad_interrupt>
  42:	00 00       	nop
  44:	94 c0       	rjmp	.+296    	; 0x16e <__vector_17>
  46:	00 00       	nop
  48:	64 c0       	rjmp	.+200    	; 0x112 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	62 c0       	rjmp	.+196    	; 0x112 <__bad_interrupt>
  4e:	00 00       	nop
  50:	60 c0       	rjmp	.+192    	; 0x112 <__bad_interrupt>
  52:	00 00       	nop
  54:	5e c0       	rjmp	.+188    	; 0x112 <__bad_interrupt>
  56:	00 00       	nop
  58:	5c c0       	rjmp	.+184    	; 0x112 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	f8 c0       	rjmp	.+496    	; 0x24e <__vector_23>
  5e:	00 00       	nop
  60:	58 c0       	rjmp	.+176    	; 0x112 <__bad_interrupt>
  62:	00 00       	nop
  64:	56 c0       	rjmp	.+172    	; 0x112 <__bad_interrupt>
  66:	00 00       	nop
  68:	54 c0       	rjmp	.+168    	; 0x112 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	52 c0       	rjmp	.+164    	; 0x112 <__bad_interrupt>
  6e:	00 00       	nop
  70:	50 c0       	rjmp	.+160    	; 0x112 <__bad_interrupt>
  72:	00 00       	nop
  74:	4e c0       	rjmp	.+156    	; 0x112 <__bad_interrupt>
  76:	00 00       	nop
  78:	4c c0       	rjmp	.+152    	; 0x112 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	4a c0       	rjmp	.+148    	; 0x112 <__bad_interrupt>
  7e:	00 00       	nop
  80:	48 c0       	rjmp	.+144    	; 0x112 <__bad_interrupt>
  82:	00 00       	nop
  84:	46 c0       	rjmp	.+140    	; 0x112 <__bad_interrupt>
  86:	00 00       	nop
  88:	44 c0       	rjmp	.+136    	; 0x112 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	42 c0       	rjmp	.+132    	; 0x112 <__bad_interrupt>
  8e:	00 00       	nop
  90:	40 c0       	rjmp	.+128    	; 0x112 <__bad_interrupt>
  92:	00 00       	nop
  94:	3e c0       	rjmp	.+124    	; 0x112 <__bad_interrupt>
  96:	00 00       	nop
  98:	3c c0       	rjmp	.+120    	; 0x112 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	3a c0       	rjmp	.+116    	; 0x112 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	38 c0       	rjmp	.+112    	; 0x112 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	36 c0       	rjmp	.+108    	; 0x112 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	34 c0       	rjmp	.+104    	; 0x112 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	32 c0       	rjmp	.+100    	; 0x112 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	30 c0       	rjmp	.+96     	; 0x112 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	2e c0       	rjmp	.+92     	; 0x112 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	2c c0       	rjmp	.+88     	; 0x112 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	2a c0       	rjmp	.+84     	; 0x112 <__bad_interrupt>
  be:	00 00       	nop
  c0:	28 c0       	rjmp	.+80     	; 0x112 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	26 c0       	rjmp	.+76     	; 0x112 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	24 c0       	rjmp	.+72     	; 0x112 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	22 c0       	rjmp	.+68     	; 0x112 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	20 c0       	rjmp	.+64     	; 0x112 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	1e c0       	rjmp	.+60     	; 0x112 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	1c c0       	rjmp	.+56     	; 0x112 <__bad_interrupt>
  da:	00 00       	nop
  dc:	1a c0       	rjmp	.+52     	; 0x112 <__bad_interrupt>
  de:	00 00       	nop
  e0:	18 c0       	rjmp	.+48     	; 0x112 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e2 e3       	ldi	r30, 0x32	; 50
  fc:	f7 e0       	ldi	r31, 0x07	; 7
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a8 30       	cpi	r26, 0x08	; 8
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>
 10e:	d9 d0       	rcall	.+434    	; 0x2c2 <main>
 110:	0e c3       	rjmp	.+1564   	; 0x72e <_exit>

00000112 <__bad_interrupt>:
 112:	76 cf       	rjmp	.-276    	; 0x0 <__vectors>

00000114 <iniciaTimer1>:
	// connect led to pin PB7
	//	DDRB = 0x80;
	//set up timer in PWM, Phase and frequency Correct mode	
//	TCCR1A |= (1 << WGM10);	
//	TCCR1B |= (1 << WGM13) | (1 << CS11) | (1 << CS10);	// set up timer with prescaler = 64 and PWM, Phase and frequency correct mode
	TCNT1 = 0; // initialize counter
 114:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
 118:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>

  //TCCR1B:  ICNC1  ICES1  –  WGM13   WGM12   CS12 CS11 CS10     Seccion 17.11.5
  TCCR1B =  0b00011001; // |0|0|0|WGM(3:2)=11|CS1(2:0)=001 (no prescaler, seccion 17.11.8)
 11c:	89 e1       	ldi	r24, 0x19	; 25
 11e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x700081>
  //TCCR1B =  0b00010001; // probar este para modo 10 (PWM phase correct) o modo 8 (PWM phase-frequency correct)
  
  //TCCR1A:  COM1A1 COM1A0|COM1B1 COM1B0|COM1C1 COM1C0|WGM11 WGM10	Seccion 17.11.1
  TCCR1A = 0b10000010; // |COM1A(1:0)=11|COM1B(1:0)=00|COM1C(1:0)=00|WGM(1:0)=10
 122:	82 e8       	ldi	r24, 0x82	; 130
 124:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>

/*Tambien podes hacer 
TCCR1A=1<<COM1A1|1<<WGM11;
TCCR1B=1<<WGM13|1<<WGM12|1<<CS10; */
	
	ICR1 = 25000;  
 128:	88 ea       	ldi	r24, 0xA8	; 168
 12a:	91 e6       	ldi	r25, 0x61	; 97
 12c:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x700087>
 130:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x700086>
				   // puede ser hasta 0xFFFF (resolucion PWM de 16 bits)
				   // En modo 14 (Fast PWM), con 25000 da un periodo 25000/16MHz=1,56 ms
				   // EN modo 10 (PWM phase correct), con 25000 da un periodo 50000/16MHz=3,12ms
				   
	// initialize compare value
	registro_de_comparacion2 = (dutyCycle2/100.0)*24999.0;
 134:	20 e0       	ldi	r18, 0x00	; 0
 136:	30 e0       	ldi	r19, 0x00	; 0
 138:	48 ec       	ldi	r20, 0xC8	; 200
 13a:	52 e4       	ldi	r21, 0x42	; 66
 13c:	60 91 00 02 	lds	r22, 0x0200	; 0x800200 <__data_start>
 140:	70 91 01 02 	lds	r23, 0x0201	; 0x800201 <__data_start+0x1>
 144:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__data_start+0x2>
 148:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <__data_start+0x3>
 14c:	80 d1       	rcall	.+768    	; 0x44e <__divsf3>
 14e:	20 e0       	ldi	r18, 0x00	; 0
 150:	3e e4       	ldi	r19, 0x4E	; 78
 152:	43 ec       	ldi	r20, 0xC3	; 195
 154:	56 e4       	ldi	r21, 0x46	; 70
 156:	64 d2       	rcall	.+1224   	; 0x620 <__mulsf3>
 158:	e2 d1       	rcall	.+964    	; 0x51e <__fixunssfsi>
 15a:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
 15e:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
	// enable compare interrupt
	//TIMSK1 |= (1 << OCIE1A)|(1<<TOIE1); // This is wrong!!!!
	TIMSK1 |= (1 << OCIE1A); // This works
 162:	ef e6       	ldi	r30, 0x6F	; 111
 164:	f0 e0       	ldi	r31, 0x00	; 0
 166:	80 81       	ld	r24, Z
 168:	82 60       	ori	r24, 0x02	; 2
 16a:	80 83       	st	Z, r24
 16c:	08 95       	ret

0000016e <__vector_17>:

}

// this ISR is fired whenever a match occurs
// hence, toggle led here itself..
ISR( TIMER1_COMPA_vect) {
 16e:	1f 92       	push	r1
 170:	0f 92       	push	r0
 172:	0f b6       	in	r0, 0x3f	; 63
 174:	0f 92       	push	r0
 176:	11 24       	eor	r1, r1
 178:	0b b6       	in	r0, 0x3b	; 59
 17a:	0f 92       	push	r0
 17c:	2f 93       	push	r18
 17e:	3f 93       	push	r19
 180:	4f 93       	push	r20
 182:	5f 93       	push	r21
 184:	6f 93       	push	r22
 186:	7f 93       	push	r23
 188:	8f 93       	push	r24
 18a:	9f 93       	push	r25
 18c:	af 93       	push	r26
 18e:	bf 93       	push	r27
 190:	ef 93       	push	r30
 192:	ff 93       	push	r31
	registro_de_comparacion2 = (dutyCycle2/100.0)*24999.0;
 194:	20 e0       	ldi	r18, 0x00	; 0
 196:	30 e0       	ldi	r19, 0x00	; 0
 198:	48 ec       	ldi	r20, 0xC8	; 200
 19a:	52 e4       	ldi	r21, 0x42	; 66
 19c:	60 91 00 02 	lds	r22, 0x0200	; 0x800200 <__data_start>
 1a0:	70 91 01 02 	lds	r23, 0x0201	; 0x800201 <__data_start+0x1>
 1a4:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__data_start+0x2>
 1a8:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <__data_start+0x3>
 1ac:	50 d1       	rcall	.+672    	; 0x44e <__divsf3>
 1ae:	20 e0       	ldi	r18, 0x00	; 0
 1b0:	3e e4       	ldi	r19, 0x4E	; 78
 1b2:	43 ec       	ldi	r20, 0xC3	; 195
 1b4:	56 e4       	ldi	r21, 0x46	; 70
 1b6:	34 d2       	rcall	.+1128   	; 0x620 <__mulsf3>
 1b8:	b2 d1       	rcall	.+868    	; 0x51e <__fixunssfsi>
 1ba:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
 1be:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
	OCR1B=(dutyCycle1/100.0)*24999.0;
 1c2:	20 e0       	ldi	r18, 0x00	; 0
 1c4:	30 e0       	ldi	r19, 0x00	; 0
 1c6:	48 ec       	ldi	r20, 0xC8	; 200
 1c8:	52 e4       	ldi	r21, 0x42	; 66
 1ca:	60 91 04 02 	lds	r22, 0x0204	; 0x800204 <dutyCycle1>
 1ce:	70 91 05 02 	lds	r23, 0x0205	; 0x800205 <dutyCycle1+0x1>
 1d2:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <dutyCycle1+0x2>
 1d6:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <dutyCycle1+0x3>
 1da:	39 d1       	rcall	.+626    	; 0x44e <__divsf3>
 1dc:	20 e0       	ldi	r18, 0x00	; 0
 1de:	3e e4       	ldi	r19, 0x4E	; 78
 1e0:	43 ec       	ldi	r20, 0xC3	; 195
 1e2:	56 e4       	ldi	r21, 0x46	; 70
 1e4:	1d d2       	rcall	.+1082   	; 0x620 <__mulsf3>
 1e6:	9b d1       	rcall	.+822    	; 0x51e <__fixunssfsi>
 1e8:	70 93 8b 00 	sts	0x008B, r23	; 0x80008b <__TEXT_REGION_LENGTH__+0x70008b>
 1ec:	60 93 8a 00 	sts	0x008A, r22	; 0x80008a <__TEXT_REGION_LENGTH__+0x70008a>
}
 1f0:	ff 91       	pop	r31
 1f2:	ef 91       	pop	r30
 1f4:	bf 91       	pop	r27
 1f6:	af 91       	pop	r26
 1f8:	9f 91       	pop	r25
 1fa:	8f 91       	pop	r24
 1fc:	7f 91       	pop	r23
 1fe:	6f 91       	pop	r22
 200:	5f 91       	pop	r21
 202:	4f 91       	pop	r20
 204:	3f 91       	pop	r19
 206:	2f 91       	pop	r18
 208:	0f 90       	pop	r0
 20a:	0b be       	out	0x3b, r0	; 59
 20c:	0f 90       	pop	r0
 20e:	0f be       	out	0x3f, r0	; 63
 210:	0f 90       	pop	r0
 212:	1f 90       	pop	r1
 214:	18 95       	reti

00000216 <iniciaTimer0>:

void iniciaTimer0() {
	
	//(1 << COM0A1) clear OC0A on Compare Match
	//(1 << WGM00) | (1 << WGM01) establecer el fast pwm
	TCCR0A = (1 << COM0A1) | (1 << WGM00) | (1 << WGM01);
 216:	83 e8       	ldi	r24, 0x83	; 131
 218:	84 bd       	out	0x24, r24	; 36
	//(1 << TOIE0) indicar el tipo de interrupcion-----Timer/Counter0 Overflow Interrupt Enable----The corresponding interrupt is executed if an overflow in Timer/Counter0 occurs
	TIMSK0 = (1 << TOIE0);
 21a:	81 e0       	ldi	r24, 0x01	; 1
 21c:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>
	//el dutycycle va entre 0 y 255
	registro_de_comparacion1 = (dutyCycle1/100.0)*255.0;	
 220:	20 e0       	ldi	r18, 0x00	; 0
 222:	30 e0       	ldi	r19, 0x00	; 0
 224:	48 ec       	ldi	r20, 0xC8	; 200
 226:	52 e4       	ldi	r21, 0x42	; 66
 228:	60 91 04 02 	lds	r22, 0x0204	; 0x800204 <dutyCycle1>
 22c:	70 91 05 02 	lds	r23, 0x0205	; 0x800205 <dutyCycle1+0x1>
 230:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <dutyCycle1+0x2>
 234:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <dutyCycle1+0x3>
 238:	0a d1       	rcall	.+532    	; 0x44e <__divsf3>
 23a:	20 e0       	ldi	r18, 0x00	; 0
 23c:	30 e0       	ldi	r19, 0x00	; 0
 23e:	4f e7       	ldi	r20, 0x7F	; 127
 240:	53 e4       	ldi	r21, 0x43	; 67
 242:	ee d1       	rcall	.+988    	; 0x620 <__mulsf3>
 244:	6c d1       	rcall	.+728    	; 0x51e <__fixunssfsi>
 246:	67 bd       	out	0x27, r22	; 39
	// cuando se usa solamente (1 << CS00), no se utiliza prescaler
	//con ambos registros se usa (clkI/O)/1024 (From prescaler)
	TCCR0B = (1 << CS00) | (1 << CS02);
 248:	85 e0       	ldi	r24, 0x05	; 5
 24a:	85 bd       	out	0x25, r24	; 37
 24c:	08 95       	ret

0000024e <__vector_23>:

}

ISR(TIMER0_OVF_vect)
{
 24e:	1f 92       	push	r1
 250:	0f 92       	push	r0
 252:	0f b6       	in	r0, 0x3f	; 63
 254:	0f 92       	push	r0
 256:	11 24       	eor	r1, r1
 258:	0b b6       	in	r0, 0x3b	; 59
 25a:	0f 92       	push	r0
 25c:	2f 93       	push	r18
 25e:	3f 93       	push	r19
 260:	4f 93       	push	r20
 262:	5f 93       	push	r21
 264:	6f 93       	push	r22
 266:	7f 93       	push	r23
 268:	8f 93       	push	r24
 26a:	9f 93       	push	r25
 26c:	af 93       	push	r26
 26e:	bf 93       	push	r27
 270:	ef 93       	push	r30
 272:	ff 93       	push	r31
	registro_de_comparacion1 = (dutyCycle1/100.0)*255;
 274:	20 e0       	ldi	r18, 0x00	; 0
 276:	30 e0       	ldi	r19, 0x00	; 0
 278:	48 ec       	ldi	r20, 0xC8	; 200
 27a:	52 e4       	ldi	r21, 0x42	; 66
 27c:	60 91 04 02 	lds	r22, 0x0204	; 0x800204 <dutyCycle1>
 280:	70 91 05 02 	lds	r23, 0x0205	; 0x800205 <dutyCycle1+0x1>
 284:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <dutyCycle1+0x2>
 288:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <dutyCycle1+0x3>
 28c:	e0 d0       	rcall	.+448    	; 0x44e <__divsf3>
 28e:	20 e0       	ldi	r18, 0x00	; 0
 290:	30 e0       	ldi	r19, 0x00	; 0
 292:	4f e7       	ldi	r20, 0x7F	; 127
 294:	53 e4       	ldi	r21, 0x43	; 67
 296:	c4 d1       	rcall	.+904    	; 0x620 <__mulsf3>
 298:	42 d1       	rcall	.+644    	; 0x51e <__fixunssfsi>
 29a:	67 bd       	out	0x27, r22	; 39
}
 29c:	ff 91       	pop	r31
 29e:	ef 91       	pop	r30
 2a0:	bf 91       	pop	r27
 2a2:	af 91       	pop	r26
 2a4:	9f 91       	pop	r25
 2a6:	8f 91       	pop	r24
 2a8:	7f 91       	pop	r23
 2aa:	6f 91       	pop	r22
 2ac:	5f 91       	pop	r21
 2ae:	4f 91       	pop	r20
 2b0:	3f 91       	pop	r19
 2b2:	2f 91       	pop	r18
 2b4:	0f 90       	pop	r0
 2b6:	0b be       	out	0x3b, r0	; 59
 2b8:	0f 90       	pop	r0
 2ba:	0f be       	out	0x3f, r0	; 63
 2bc:	0f 90       	pop	r0
 2be:	1f 90       	pop	r1
 2c0:	18 95       	reti

000002c2 <main>:


int main(void) {

	//poner pines como salida
	DDRB |= (1 << pin11) | (1 << pin12) | (1 << pin13);
 2c2:	84 b1       	in	r24, 0x04	; 4
 2c4:	80 6e       	ori	r24, 0xE0	; 224
 2c6:	84 b9       	out	0x04, r24	; 4
	DDRH |= (1 << pin8) | (1 << pin9) | (1 << pin10);
 2c8:	e1 e0       	ldi	r30, 0x01	; 1
 2ca:	f1 e0       	ldi	r31, 0x01	; 1
 2cc:	80 81       	ld	r24, Z
 2ce:	80 67       	ori	r24, 0x70	; 112
 2d0:	80 83       	st	Z, r24

	iniciaTimer0();
 2d2:	a1 df       	rcall	.-190    	; 0x216 <iniciaTimer0>

	// initialize timer
	iniciaTimer1();
 2d4:	1f df       	rcall	.-450    	; 0x114 <iniciaTimer1>

	

	//activar interrupciones globalmente
	sei();
 2d6:	78 94       	sei
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2d8:	2f e7       	ldi	r18, 0x7F	; 127
 2da:	8a e1       	ldi	r24, 0x1A	; 26
 2dc:	96 e0       	ldi	r25, 0x06	; 6
 2de:	21 50       	subi	r18, 0x01	; 1
 2e0:	80 40       	sbci	r24, 0x00	; 0
 2e2:	90 40       	sbci	r25, 0x00	; 0
 2e4:	e1 f7       	brne	.-8      	; 0x2de <main+0x1c>
 2e6:	00 c0       	rjmp	.+0      	; 0x2e8 <main+0x26>
 2e8:	00 00       	nop
	{
		
		_delay_ms(100);
		
		//primer pwm
		dutyCycle1 += 10;
 2ea:	20 e0       	ldi	r18, 0x00	; 0
 2ec:	30 e0       	ldi	r19, 0x00	; 0
 2ee:	40 e2       	ldi	r20, 0x20	; 32
 2f0:	51 e4       	ldi	r21, 0x41	; 65
 2f2:	60 91 04 02 	lds	r22, 0x0204	; 0x800204 <dutyCycle1>
 2f6:	70 91 05 02 	lds	r23, 0x0205	; 0x800205 <dutyCycle1+0x1>
 2fa:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <dutyCycle1+0x2>
 2fe:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <dutyCycle1+0x3>
 302:	41 d0       	rcall	.+130    	; 0x386 <__addsf3>
 304:	6b 01       	movw	r12, r22
 306:	7c 01       	movw	r14, r24
		if(dutyCycle1 > 100)
 308:	20 e0       	ldi	r18, 0x00	; 0
 30a:	30 e0       	ldi	r19, 0x00	; 0
 30c:	48 ec       	ldi	r20, 0xC8	; 200
 30e:	52 e4       	ldi	r21, 0x42	; 66
 310:	83 d1       	rcall	.+774    	; 0x618 <__gesf2>
 312:	18 16       	cp	r1, r24
 314:	4c f0       	brlt	.+18     	; 0x328 <main+0x66>
	{
		
		_delay_ms(100);
		
		//primer pwm
		dutyCycle1 += 10;
 316:	c0 92 04 02 	sts	0x0204, r12	; 0x800204 <dutyCycle1>
 31a:	d0 92 05 02 	sts	0x0205, r13	; 0x800205 <dutyCycle1+0x1>
 31e:	e0 92 06 02 	sts	0x0206, r14	; 0x800206 <dutyCycle1+0x2>
 322:	f0 92 07 02 	sts	0x0207, r15	; 0x800207 <dutyCycle1+0x3>
 326:	08 c0       	rjmp	.+16     	; 0x338 <main+0x76>
		if(dutyCycle1 > 100)
		{
			dutyCycle1 = 0;
 328:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <dutyCycle1>
 32c:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <dutyCycle1+0x1>
 330:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <dutyCycle1+0x2>
 334:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <dutyCycle1+0x3>
		}

		//segundo pwm
		dutyCycle2 += 10;
 338:	20 e0       	ldi	r18, 0x00	; 0
 33a:	30 e0       	ldi	r19, 0x00	; 0
 33c:	40 e2       	ldi	r20, 0x20	; 32
 33e:	51 e4       	ldi	r21, 0x41	; 65
 340:	60 91 00 02 	lds	r22, 0x0200	; 0x800200 <__data_start>
 344:	70 91 01 02 	lds	r23, 0x0201	; 0x800201 <__data_start+0x1>
 348:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__data_start+0x2>
 34c:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <__data_start+0x3>
 350:	1a d0       	rcall	.+52     	; 0x386 <__addsf3>
 352:	60 93 00 02 	sts	0x0200, r22	; 0x800200 <__data_start>
 356:	70 93 01 02 	sts	0x0201, r23	; 0x800201 <__data_start+0x1>
 35a:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <__data_start+0x2>
 35e:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <__data_start+0x3>
		if(dutyCycle2 > 100)
 362:	20 e0       	ldi	r18, 0x00	; 0
 364:	30 e0       	ldi	r19, 0x00	; 0
 366:	48 ec       	ldi	r20, 0xC8	; 200
 368:	52 e4       	ldi	r21, 0x42	; 66
 36a:	56 d1       	rcall	.+684    	; 0x618 <__gesf2>
 36c:	18 16       	cp	r1, r24
 36e:	0c f0       	brlt	.+2      	; 0x372 <main+0xb0>
 370:	b3 cf       	rjmp	.-154    	; 0x2d8 <main+0x16>
		{
			dutyCycle2 = 0;
 372:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__data_start>
 376:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <__data_start+0x1>
 37a:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <__data_start+0x2>
 37e:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <__data_start+0x3>
 382:	aa cf       	rjmp	.-172    	; 0x2d8 <main+0x16>

00000384 <__subsf3>:
 384:	50 58       	subi	r21, 0x80	; 128

00000386 <__addsf3>:
 386:	bb 27       	eor	r27, r27
 388:	aa 27       	eor	r26, r26
 38a:	0e d0       	rcall	.+28     	; 0x3a8 <__addsf3x>
 38c:	0b c1       	rjmp	.+534    	; 0x5a4 <__fp_round>
 38e:	fc d0       	rcall	.+504    	; 0x588 <__fp_pscA>
 390:	30 f0       	brcs	.+12     	; 0x39e <__addsf3+0x18>
 392:	01 d1       	rcall	.+514    	; 0x596 <__fp_pscB>
 394:	20 f0       	brcs	.+8      	; 0x39e <__addsf3+0x18>
 396:	31 f4       	brne	.+12     	; 0x3a4 <__addsf3+0x1e>
 398:	9f 3f       	cpi	r25, 0xFF	; 255
 39a:	11 f4       	brne	.+4      	; 0x3a0 <__addsf3+0x1a>
 39c:	1e f4       	brtc	.+6      	; 0x3a4 <__addsf3+0x1e>
 39e:	f1 c0       	rjmp	.+482    	; 0x582 <__fp_nan>
 3a0:	0e f4       	brtc	.+2      	; 0x3a4 <__addsf3+0x1e>
 3a2:	e0 95       	com	r30
 3a4:	e7 fb       	bst	r30, 7
 3a6:	e7 c0       	rjmp	.+462    	; 0x576 <__fp_inf>

000003a8 <__addsf3x>:
 3a8:	e9 2f       	mov	r30, r25
 3aa:	0d d1       	rcall	.+538    	; 0x5c6 <__fp_split3>
 3ac:	80 f3       	brcs	.-32     	; 0x38e <__addsf3+0x8>
 3ae:	ba 17       	cp	r27, r26
 3b0:	62 07       	cpc	r22, r18
 3b2:	73 07       	cpc	r23, r19
 3b4:	84 07       	cpc	r24, r20
 3b6:	95 07       	cpc	r25, r21
 3b8:	18 f0       	brcs	.+6      	; 0x3c0 <__addsf3x+0x18>
 3ba:	71 f4       	brne	.+28     	; 0x3d8 <__addsf3x+0x30>
 3bc:	9e f5       	brtc	.+102    	; 0x424 <__FUSE_REGION_LENGTH__+0x24>
 3be:	25 c1       	rjmp	.+586    	; 0x60a <__fp_zero>
 3c0:	0e f4       	brtc	.+2      	; 0x3c4 <__addsf3x+0x1c>
 3c2:	e0 95       	com	r30
 3c4:	0b 2e       	mov	r0, r27
 3c6:	ba 2f       	mov	r27, r26
 3c8:	a0 2d       	mov	r26, r0
 3ca:	0b 01       	movw	r0, r22
 3cc:	b9 01       	movw	r22, r18
 3ce:	90 01       	movw	r18, r0
 3d0:	0c 01       	movw	r0, r24
 3d2:	ca 01       	movw	r24, r20
 3d4:	a0 01       	movw	r20, r0
 3d6:	11 24       	eor	r1, r1
 3d8:	ff 27       	eor	r31, r31
 3da:	59 1b       	sub	r21, r25
 3dc:	99 f0       	breq	.+38     	; 0x404 <__FUSE_REGION_LENGTH__+0x4>
 3de:	59 3f       	cpi	r21, 0xF9	; 249
 3e0:	50 f4       	brcc	.+20     	; 0x3f6 <__addsf3x+0x4e>
 3e2:	50 3e       	cpi	r21, 0xE0	; 224
 3e4:	68 f1       	brcs	.+90     	; 0x440 <__FUSE_REGION_LENGTH__+0x40>
 3e6:	1a 16       	cp	r1, r26
 3e8:	f0 40       	sbci	r31, 0x00	; 0
 3ea:	a2 2f       	mov	r26, r18
 3ec:	23 2f       	mov	r18, r19
 3ee:	34 2f       	mov	r19, r20
 3f0:	44 27       	eor	r20, r20
 3f2:	58 5f       	subi	r21, 0xF8	; 248
 3f4:	f3 cf       	rjmp	.-26     	; 0x3dc <__addsf3x+0x34>
 3f6:	46 95       	lsr	r20
 3f8:	37 95       	ror	r19
 3fa:	27 95       	ror	r18
 3fc:	a7 95       	ror	r26
 3fe:	f0 40       	sbci	r31, 0x00	; 0
 400:	53 95       	inc	r21
 402:	c9 f7       	brne	.-14     	; 0x3f6 <__addsf3x+0x4e>
 404:	7e f4       	brtc	.+30     	; 0x424 <__FUSE_REGION_LENGTH__+0x24>
 406:	1f 16       	cp	r1, r31
 408:	ba 0b       	sbc	r27, r26
 40a:	62 0b       	sbc	r22, r18
 40c:	73 0b       	sbc	r23, r19
 40e:	84 0b       	sbc	r24, r20
 410:	ba f0       	brmi	.+46     	; 0x440 <__FUSE_REGION_LENGTH__+0x40>
 412:	91 50       	subi	r25, 0x01	; 1
 414:	a1 f0       	breq	.+40     	; 0x43e <__FUSE_REGION_LENGTH__+0x3e>
 416:	ff 0f       	add	r31, r31
 418:	bb 1f       	adc	r27, r27
 41a:	66 1f       	adc	r22, r22
 41c:	77 1f       	adc	r23, r23
 41e:	88 1f       	adc	r24, r24
 420:	c2 f7       	brpl	.-16     	; 0x412 <__FUSE_REGION_LENGTH__+0x12>
 422:	0e c0       	rjmp	.+28     	; 0x440 <__FUSE_REGION_LENGTH__+0x40>
 424:	ba 0f       	add	r27, r26
 426:	62 1f       	adc	r22, r18
 428:	73 1f       	adc	r23, r19
 42a:	84 1f       	adc	r24, r20
 42c:	48 f4       	brcc	.+18     	; 0x440 <__FUSE_REGION_LENGTH__+0x40>
 42e:	87 95       	ror	r24
 430:	77 95       	ror	r23
 432:	67 95       	ror	r22
 434:	b7 95       	ror	r27
 436:	f7 95       	ror	r31
 438:	9e 3f       	cpi	r25, 0xFE	; 254
 43a:	08 f0       	brcs	.+2      	; 0x43e <__FUSE_REGION_LENGTH__+0x3e>
 43c:	b3 cf       	rjmp	.-154    	; 0x3a4 <__addsf3+0x1e>
 43e:	93 95       	inc	r25
 440:	88 0f       	add	r24, r24
 442:	08 f0       	brcs	.+2      	; 0x446 <__FUSE_REGION_LENGTH__+0x46>
 444:	99 27       	eor	r25, r25
 446:	ee 0f       	add	r30, r30
 448:	97 95       	ror	r25
 44a:	87 95       	ror	r24
 44c:	08 95       	ret

0000044e <__divsf3>:
 44e:	0c d0       	rcall	.+24     	; 0x468 <__divsf3x>
 450:	a9 c0       	rjmp	.+338    	; 0x5a4 <__fp_round>
 452:	a1 d0       	rcall	.+322    	; 0x596 <__fp_pscB>
 454:	40 f0       	brcs	.+16     	; 0x466 <__divsf3+0x18>
 456:	98 d0       	rcall	.+304    	; 0x588 <__fp_pscA>
 458:	30 f0       	brcs	.+12     	; 0x466 <__divsf3+0x18>
 45a:	21 f4       	brne	.+8      	; 0x464 <__divsf3+0x16>
 45c:	5f 3f       	cpi	r21, 0xFF	; 255
 45e:	19 f0       	breq	.+6      	; 0x466 <__divsf3+0x18>
 460:	8a c0       	rjmp	.+276    	; 0x576 <__fp_inf>
 462:	51 11       	cpse	r21, r1
 464:	d3 c0       	rjmp	.+422    	; 0x60c <__fp_szero>
 466:	8d c0       	rjmp	.+282    	; 0x582 <__fp_nan>

00000468 <__divsf3x>:
 468:	ae d0       	rcall	.+348    	; 0x5c6 <__fp_split3>
 46a:	98 f3       	brcs	.-26     	; 0x452 <__divsf3+0x4>

0000046c <__divsf3_pse>:
 46c:	99 23       	and	r25, r25
 46e:	c9 f3       	breq	.-14     	; 0x462 <__divsf3+0x14>
 470:	55 23       	and	r21, r21
 472:	b1 f3       	breq	.-20     	; 0x460 <__divsf3+0x12>
 474:	95 1b       	sub	r25, r21
 476:	55 0b       	sbc	r21, r21
 478:	bb 27       	eor	r27, r27
 47a:	aa 27       	eor	r26, r26
 47c:	62 17       	cp	r22, r18
 47e:	73 07       	cpc	r23, r19
 480:	84 07       	cpc	r24, r20
 482:	38 f0       	brcs	.+14     	; 0x492 <__divsf3_pse+0x26>
 484:	9f 5f       	subi	r25, 0xFF	; 255
 486:	5f 4f       	sbci	r21, 0xFF	; 255
 488:	22 0f       	add	r18, r18
 48a:	33 1f       	adc	r19, r19
 48c:	44 1f       	adc	r20, r20
 48e:	aa 1f       	adc	r26, r26
 490:	a9 f3       	breq	.-22     	; 0x47c <__divsf3_pse+0x10>
 492:	33 d0       	rcall	.+102    	; 0x4fa <__divsf3_pse+0x8e>
 494:	0e 2e       	mov	r0, r30
 496:	3a f0       	brmi	.+14     	; 0x4a6 <__divsf3_pse+0x3a>
 498:	e0 e8       	ldi	r30, 0x80	; 128
 49a:	30 d0       	rcall	.+96     	; 0x4fc <__divsf3_pse+0x90>
 49c:	91 50       	subi	r25, 0x01	; 1
 49e:	50 40       	sbci	r21, 0x00	; 0
 4a0:	e6 95       	lsr	r30
 4a2:	00 1c       	adc	r0, r0
 4a4:	ca f7       	brpl	.-14     	; 0x498 <__divsf3_pse+0x2c>
 4a6:	29 d0       	rcall	.+82     	; 0x4fa <__divsf3_pse+0x8e>
 4a8:	fe 2f       	mov	r31, r30
 4aa:	27 d0       	rcall	.+78     	; 0x4fa <__divsf3_pse+0x8e>
 4ac:	66 0f       	add	r22, r22
 4ae:	77 1f       	adc	r23, r23
 4b0:	88 1f       	adc	r24, r24
 4b2:	bb 1f       	adc	r27, r27
 4b4:	26 17       	cp	r18, r22
 4b6:	37 07       	cpc	r19, r23
 4b8:	48 07       	cpc	r20, r24
 4ba:	ab 07       	cpc	r26, r27
 4bc:	b0 e8       	ldi	r27, 0x80	; 128
 4be:	09 f0       	breq	.+2      	; 0x4c2 <__divsf3_pse+0x56>
 4c0:	bb 0b       	sbc	r27, r27
 4c2:	80 2d       	mov	r24, r0
 4c4:	bf 01       	movw	r22, r30
 4c6:	ff 27       	eor	r31, r31
 4c8:	93 58       	subi	r25, 0x83	; 131
 4ca:	5f 4f       	sbci	r21, 0xFF	; 255
 4cc:	2a f0       	brmi	.+10     	; 0x4d8 <__divsf3_pse+0x6c>
 4ce:	9e 3f       	cpi	r25, 0xFE	; 254
 4d0:	51 05       	cpc	r21, r1
 4d2:	68 f0       	brcs	.+26     	; 0x4ee <__divsf3_pse+0x82>
 4d4:	50 c0       	rjmp	.+160    	; 0x576 <__fp_inf>
 4d6:	9a c0       	rjmp	.+308    	; 0x60c <__fp_szero>
 4d8:	5f 3f       	cpi	r21, 0xFF	; 255
 4da:	ec f3       	brlt	.-6      	; 0x4d6 <__divsf3_pse+0x6a>
 4dc:	98 3e       	cpi	r25, 0xE8	; 232
 4de:	dc f3       	brlt	.-10     	; 0x4d6 <__divsf3_pse+0x6a>
 4e0:	86 95       	lsr	r24
 4e2:	77 95       	ror	r23
 4e4:	67 95       	ror	r22
 4e6:	b7 95       	ror	r27
 4e8:	f7 95       	ror	r31
 4ea:	9f 5f       	subi	r25, 0xFF	; 255
 4ec:	c9 f7       	brne	.-14     	; 0x4e0 <__divsf3_pse+0x74>
 4ee:	88 0f       	add	r24, r24
 4f0:	91 1d       	adc	r25, r1
 4f2:	96 95       	lsr	r25
 4f4:	87 95       	ror	r24
 4f6:	97 f9       	bld	r25, 7
 4f8:	08 95       	ret
 4fa:	e1 e0       	ldi	r30, 0x01	; 1
 4fc:	66 0f       	add	r22, r22
 4fe:	77 1f       	adc	r23, r23
 500:	88 1f       	adc	r24, r24
 502:	bb 1f       	adc	r27, r27
 504:	62 17       	cp	r22, r18
 506:	73 07       	cpc	r23, r19
 508:	84 07       	cpc	r24, r20
 50a:	ba 07       	cpc	r27, r26
 50c:	20 f0       	brcs	.+8      	; 0x516 <__divsf3_pse+0xaa>
 50e:	62 1b       	sub	r22, r18
 510:	73 0b       	sbc	r23, r19
 512:	84 0b       	sbc	r24, r20
 514:	ba 0b       	sbc	r27, r26
 516:	ee 1f       	adc	r30, r30
 518:	88 f7       	brcc	.-30     	; 0x4fc <__divsf3_pse+0x90>
 51a:	e0 95       	com	r30
 51c:	08 95       	ret

0000051e <__fixunssfsi>:
 51e:	5b d0       	rcall	.+182    	; 0x5d6 <__fp_splitA>
 520:	88 f0       	brcs	.+34     	; 0x544 <__fixunssfsi+0x26>
 522:	9f 57       	subi	r25, 0x7F	; 127
 524:	90 f0       	brcs	.+36     	; 0x54a <__fixunssfsi+0x2c>
 526:	b9 2f       	mov	r27, r25
 528:	99 27       	eor	r25, r25
 52a:	b7 51       	subi	r27, 0x17	; 23
 52c:	a0 f0       	brcs	.+40     	; 0x556 <__fixunssfsi+0x38>
 52e:	d1 f0       	breq	.+52     	; 0x564 <__fixunssfsi+0x46>
 530:	66 0f       	add	r22, r22
 532:	77 1f       	adc	r23, r23
 534:	88 1f       	adc	r24, r24
 536:	99 1f       	adc	r25, r25
 538:	1a f0       	brmi	.+6      	; 0x540 <__fixunssfsi+0x22>
 53a:	ba 95       	dec	r27
 53c:	c9 f7       	brne	.-14     	; 0x530 <__fixunssfsi+0x12>
 53e:	12 c0       	rjmp	.+36     	; 0x564 <__fixunssfsi+0x46>
 540:	b1 30       	cpi	r27, 0x01	; 1
 542:	81 f0       	breq	.+32     	; 0x564 <__fixunssfsi+0x46>
 544:	62 d0       	rcall	.+196    	; 0x60a <__fp_zero>
 546:	b1 e0       	ldi	r27, 0x01	; 1
 548:	08 95       	ret
 54a:	5f c0       	rjmp	.+190    	; 0x60a <__fp_zero>
 54c:	67 2f       	mov	r22, r23
 54e:	78 2f       	mov	r23, r24
 550:	88 27       	eor	r24, r24
 552:	b8 5f       	subi	r27, 0xF8	; 248
 554:	39 f0       	breq	.+14     	; 0x564 <__fixunssfsi+0x46>
 556:	b9 3f       	cpi	r27, 0xF9	; 249
 558:	cc f3       	brlt	.-14     	; 0x54c <__fixunssfsi+0x2e>
 55a:	86 95       	lsr	r24
 55c:	77 95       	ror	r23
 55e:	67 95       	ror	r22
 560:	b3 95       	inc	r27
 562:	d9 f7       	brne	.-10     	; 0x55a <__fixunssfsi+0x3c>
 564:	3e f4       	brtc	.+14     	; 0x574 <__fixunssfsi+0x56>
 566:	90 95       	com	r25
 568:	80 95       	com	r24
 56a:	70 95       	com	r23
 56c:	61 95       	neg	r22
 56e:	7f 4f       	sbci	r23, 0xFF	; 255
 570:	8f 4f       	sbci	r24, 0xFF	; 255
 572:	9f 4f       	sbci	r25, 0xFF	; 255
 574:	08 95       	ret

00000576 <__fp_inf>:
 576:	97 f9       	bld	r25, 7
 578:	9f 67       	ori	r25, 0x7F	; 127
 57a:	80 e8       	ldi	r24, 0x80	; 128
 57c:	70 e0       	ldi	r23, 0x00	; 0
 57e:	60 e0       	ldi	r22, 0x00	; 0
 580:	08 95       	ret

00000582 <__fp_nan>:
 582:	9f ef       	ldi	r25, 0xFF	; 255
 584:	80 ec       	ldi	r24, 0xC0	; 192
 586:	08 95       	ret

00000588 <__fp_pscA>:
 588:	00 24       	eor	r0, r0
 58a:	0a 94       	dec	r0
 58c:	16 16       	cp	r1, r22
 58e:	17 06       	cpc	r1, r23
 590:	18 06       	cpc	r1, r24
 592:	09 06       	cpc	r0, r25
 594:	08 95       	ret

00000596 <__fp_pscB>:
 596:	00 24       	eor	r0, r0
 598:	0a 94       	dec	r0
 59a:	12 16       	cp	r1, r18
 59c:	13 06       	cpc	r1, r19
 59e:	14 06       	cpc	r1, r20
 5a0:	05 06       	cpc	r0, r21
 5a2:	08 95       	ret

000005a4 <__fp_round>:
 5a4:	09 2e       	mov	r0, r25
 5a6:	03 94       	inc	r0
 5a8:	00 0c       	add	r0, r0
 5aa:	11 f4       	brne	.+4      	; 0x5b0 <__fp_round+0xc>
 5ac:	88 23       	and	r24, r24
 5ae:	52 f0       	brmi	.+20     	; 0x5c4 <__fp_round+0x20>
 5b0:	bb 0f       	add	r27, r27
 5b2:	40 f4       	brcc	.+16     	; 0x5c4 <__fp_round+0x20>
 5b4:	bf 2b       	or	r27, r31
 5b6:	11 f4       	brne	.+4      	; 0x5bc <__fp_round+0x18>
 5b8:	60 ff       	sbrs	r22, 0
 5ba:	04 c0       	rjmp	.+8      	; 0x5c4 <__fp_round+0x20>
 5bc:	6f 5f       	subi	r22, 0xFF	; 255
 5be:	7f 4f       	sbci	r23, 0xFF	; 255
 5c0:	8f 4f       	sbci	r24, 0xFF	; 255
 5c2:	9f 4f       	sbci	r25, 0xFF	; 255
 5c4:	08 95       	ret

000005c6 <__fp_split3>:
 5c6:	57 fd       	sbrc	r21, 7
 5c8:	90 58       	subi	r25, 0x80	; 128
 5ca:	44 0f       	add	r20, r20
 5cc:	55 1f       	adc	r21, r21
 5ce:	59 f0       	breq	.+22     	; 0x5e6 <__fp_splitA+0x10>
 5d0:	5f 3f       	cpi	r21, 0xFF	; 255
 5d2:	71 f0       	breq	.+28     	; 0x5f0 <__fp_splitA+0x1a>
 5d4:	47 95       	ror	r20

000005d6 <__fp_splitA>:
 5d6:	88 0f       	add	r24, r24
 5d8:	97 fb       	bst	r25, 7
 5da:	99 1f       	adc	r25, r25
 5dc:	61 f0       	breq	.+24     	; 0x5f6 <__fp_splitA+0x20>
 5de:	9f 3f       	cpi	r25, 0xFF	; 255
 5e0:	79 f0       	breq	.+30     	; 0x600 <__fp_splitA+0x2a>
 5e2:	87 95       	ror	r24
 5e4:	08 95       	ret
 5e6:	12 16       	cp	r1, r18
 5e8:	13 06       	cpc	r1, r19
 5ea:	14 06       	cpc	r1, r20
 5ec:	55 1f       	adc	r21, r21
 5ee:	f2 cf       	rjmp	.-28     	; 0x5d4 <__fp_split3+0xe>
 5f0:	46 95       	lsr	r20
 5f2:	f1 df       	rcall	.-30     	; 0x5d6 <__fp_splitA>
 5f4:	08 c0       	rjmp	.+16     	; 0x606 <__fp_splitA+0x30>
 5f6:	16 16       	cp	r1, r22
 5f8:	17 06       	cpc	r1, r23
 5fa:	18 06       	cpc	r1, r24
 5fc:	99 1f       	adc	r25, r25
 5fe:	f1 cf       	rjmp	.-30     	; 0x5e2 <__fp_splitA+0xc>
 600:	86 95       	lsr	r24
 602:	71 05       	cpc	r23, r1
 604:	61 05       	cpc	r22, r1
 606:	08 94       	sec
 608:	08 95       	ret

0000060a <__fp_zero>:
 60a:	e8 94       	clt

0000060c <__fp_szero>:
 60c:	bb 27       	eor	r27, r27
 60e:	66 27       	eor	r22, r22
 610:	77 27       	eor	r23, r23
 612:	cb 01       	movw	r24, r22
 614:	97 f9       	bld	r25, 7
 616:	08 95       	ret

00000618 <__gesf2>:
 618:	66 d0       	rcall	.+204    	; 0x6e6 <__fp_cmp>
 61a:	08 f4       	brcc	.+2      	; 0x61e <__gesf2+0x6>
 61c:	8f ef       	ldi	r24, 0xFF	; 255
 61e:	08 95       	ret

00000620 <__mulsf3>:
 620:	0b d0       	rcall	.+22     	; 0x638 <__mulsf3x>
 622:	c0 cf       	rjmp	.-128    	; 0x5a4 <__fp_round>
 624:	b1 df       	rcall	.-158    	; 0x588 <__fp_pscA>
 626:	28 f0       	brcs	.+10     	; 0x632 <__mulsf3+0x12>
 628:	b6 df       	rcall	.-148    	; 0x596 <__fp_pscB>
 62a:	18 f0       	brcs	.+6      	; 0x632 <__mulsf3+0x12>
 62c:	95 23       	and	r25, r21
 62e:	09 f0       	breq	.+2      	; 0x632 <__mulsf3+0x12>
 630:	a2 cf       	rjmp	.-188    	; 0x576 <__fp_inf>
 632:	a7 cf       	rjmp	.-178    	; 0x582 <__fp_nan>
 634:	11 24       	eor	r1, r1
 636:	ea cf       	rjmp	.-44     	; 0x60c <__fp_szero>

00000638 <__mulsf3x>:
 638:	c6 df       	rcall	.-116    	; 0x5c6 <__fp_split3>
 63a:	a0 f3       	brcs	.-24     	; 0x624 <__mulsf3+0x4>

0000063c <__mulsf3_pse>:
 63c:	95 9f       	mul	r25, r21
 63e:	d1 f3       	breq	.-12     	; 0x634 <__mulsf3+0x14>
 640:	95 0f       	add	r25, r21
 642:	50 e0       	ldi	r21, 0x00	; 0
 644:	55 1f       	adc	r21, r21
 646:	62 9f       	mul	r22, r18
 648:	f0 01       	movw	r30, r0
 64a:	72 9f       	mul	r23, r18
 64c:	bb 27       	eor	r27, r27
 64e:	f0 0d       	add	r31, r0
 650:	b1 1d       	adc	r27, r1
 652:	63 9f       	mul	r22, r19
 654:	aa 27       	eor	r26, r26
 656:	f0 0d       	add	r31, r0
 658:	b1 1d       	adc	r27, r1
 65a:	aa 1f       	adc	r26, r26
 65c:	64 9f       	mul	r22, r20
 65e:	66 27       	eor	r22, r22
 660:	b0 0d       	add	r27, r0
 662:	a1 1d       	adc	r26, r1
 664:	66 1f       	adc	r22, r22
 666:	82 9f       	mul	r24, r18
 668:	22 27       	eor	r18, r18
 66a:	b0 0d       	add	r27, r0
 66c:	a1 1d       	adc	r26, r1
 66e:	62 1f       	adc	r22, r18
 670:	73 9f       	mul	r23, r19
 672:	b0 0d       	add	r27, r0
 674:	a1 1d       	adc	r26, r1
 676:	62 1f       	adc	r22, r18
 678:	83 9f       	mul	r24, r19
 67a:	a0 0d       	add	r26, r0
 67c:	61 1d       	adc	r22, r1
 67e:	22 1f       	adc	r18, r18
 680:	74 9f       	mul	r23, r20
 682:	33 27       	eor	r19, r19
 684:	a0 0d       	add	r26, r0
 686:	61 1d       	adc	r22, r1
 688:	23 1f       	adc	r18, r19
 68a:	84 9f       	mul	r24, r20
 68c:	60 0d       	add	r22, r0
 68e:	21 1d       	adc	r18, r1
 690:	82 2f       	mov	r24, r18
 692:	76 2f       	mov	r23, r22
 694:	6a 2f       	mov	r22, r26
 696:	11 24       	eor	r1, r1
 698:	9f 57       	subi	r25, 0x7F	; 127
 69a:	50 40       	sbci	r21, 0x00	; 0
 69c:	8a f0       	brmi	.+34     	; 0x6c0 <__mulsf3_pse+0x84>
 69e:	e1 f0       	breq	.+56     	; 0x6d8 <__mulsf3_pse+0x9c>
 6a0:	88 23       	and	r24, r24
 6a2:	4a f0       	brmi	.+18     	; 0x6b6 <__mulsf3_pse+0x7a>
 6a4:	ee 0f       	add	r30, r30
 6a6:	ff 1f       	adc	r31, r31
 6a8:	bb 1f       	adc	r27, r27
 6aa:	66 1f       	adc	r22, r22
 6ac:	77 1f       	adc	r23, r23
 6ae:	88 1f       	adc	r24, r24
 6b0:	91 50       	subi	r25, 0x01	; 1
 6b2:	50 40       	sbci	r21, 0x00	; 0
 6b4:	a9 f7       	brne	.-22     	; 0x6a0 <__mulsf3_pse+0x64>
 6b6:	9e 3f       	cpi	r25, 0xFE	; 254
 6b8:	51 05       	cpc	r21, r1
 6ba:	70 f0       	brcs	.+28     	; 0x6d8 <__mulsf3_pse+0x9c>
 6bc:	5c cf       	rjmp	.-328    	; 0x576 <__fp_inf>
 6be:	a6 cf       	rjmp	.-180    	; 0x60c <__fp_szero>
 6c0:	5f 3f       	cpi	r21, 0xFF	; 255
 6c2:	ec f3       	brlt	.-6      	; 0x6be <__mulsf3_pse+0x82>
 6c4:	98 3e       	cpi	r25, 0xE8	; 232
 6c6:	dc f3       	brlt	.-10     	; 0x6be <__mulsf3_pse+0x82>
 6c8:	86 95       	lsr	r24
 6ca:	77 95       	ror	r23
 6cc:	67 95       	ror	r22
 6ce:	b7 95       	ror	r27
 6d0:	f7 95       	ror	r31
 6d2:	e7 95       	ror	r30
 6d4:	9f 5f       	subi	r25, 0xFF	; 255
 6d6:	c1 f7       	brne	.-16     	; 0x6c8 <__mulsf3_pse+0x8c>
 6d8:	fe 2b       	or	r31, r30
 6da:	88 0f       	add	r24, r24
 6dc:	91 1d       	adc	r25, r1
 6de:	96 95       	lsr	r25
 6e0:	87 95       	ror	r24
 6e2:	97 f9       	bld	r25, 7
 6e4:	08 95       	ret

000006e6 <__fp_cmp>:
 6e6:	99 0f       	add	r25, r25
 6e8:	00 08       	sbc	r0, r0
 6ea:	55 0f       	add	r21, r21
 6ec:	aa 0b       	sbc	r26, r26
 6ee:	e0 e8       	ldi	r30, 0x80	; 128
 6f0:	fe ef       	ldi	r31, 0xFE	; 254
 6f2:	16 16       	cp	r1, r22
 6f4:	17 06       	cpc	r1, r23
 6f6:	e8 07       	cpc	r30, r24
 6f8:	f9 07       	cpc	r31, r25
 6fa:	c0 f0       	brcs	.+48     	; 0x72c <__fp_cmp+0x46>
 6fc:	12 16       	cp	r1, r18
 6fe:	13 06       	cpc	r1, r19
 700:	e4 07       	cpc	r30, r20
 702:	f5 07       	cpc	r31, r21
 704:	98 f0       	brcs	.+38     	; 0x72c <__fp_cmp+0x46>
 706:	62 1b       	sub	r22, r18
 708:	73 0b       	sbc	r23, r19
 70a:	84 0b       	sbc	r24, r20
 70c:	95 0b       	sbc	r25, r21
 70e:	39 f4       	brne	.+14     	; 0x71e <__fp_cmp+0x38>
 710:	0a 26       	eor	r0, r26
 712:	61 f0       	breq	.+24     	; 0x72c <__fp_cmp+0x46>
 714:	23 2b       	or	r18, r19
 716:	24 2b       	or	r18, r20
 718:	25 2b       	or	r18, r21
 71a:	21 f4       	brne	.+8      	; 0x724 <__fp_cmp+0x3e>
 71c:	08 95       	ret
 71e:	0a 26       	eor	r0, r26
 720:	09 f4       	brne	.+2      	; 0x724 <__fp_cmp+0x3e>
 722:	a1 40       	sbci	r26, 0x01	; 1
 724:	a6 95       	lsr	r26
 726:	8f ef       	ldi	r24, 0xFF	; 255
 728:	81 1d       	adc	r24, r1
 72a:	81 1d       	adc	r24, r1
 72c:	08 95       	ret

0000072e <_exit>:
 72e:	f8 94       	cli

00000730 <__stop_program>:
 730:	ff cf       	rjmp	.-2      	; 0x730 <__stop_program>
